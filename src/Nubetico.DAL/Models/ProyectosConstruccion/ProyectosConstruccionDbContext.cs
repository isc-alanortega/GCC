// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace Nubetico.DAL.Models.ProyectosConstruccion;

public partial class ProyectosConstruccionDbContext : DbContext
{
    public ProyectosConstruccionDbContext(DbContextOptions<ProyectosConstruccionDbContext> options)
        : base(options)
    {
    }

    public virtual DbSet<Cat_Estatus> Cat_Estatus { get; set; }

    public virtual DbSet<Catalogo_Insumos_Unidades> Catalogo_Insumos_Unidades { get; set; }

    public virtual DbSet<Catalogos> Catalogos { get; set; }

    public virtual DbSet<Contratistas> Contratistas { get; set; }

    public virtual DbSet<Empleados> Empleados { get; set; }

    public virtual DbSet<Fraccionamientos> Fraccionamientos { get; set; }

    public virtual DbSet<Fraccionamientos_Etapas> Fraccionamientos_Etapas { get; set; }

    public virtual DbSet<Fraccionamientos_Etapas_Manzanas> Fraccionamientos_Etapas_Manzanas { get; set; }

    public virtual DbSet<Insumos> Insumos { get; set; }

    public virtual DbSet<Lotes> Lotes { get; set; }

    public virtual DbSet<Lotes_Propietarios> Lotes_Propietarios { get; set; }

    public virtual DbSet<Modelos> Modelos { get; set; }

    public virtual DbSet<Modelos_Grupos> Modelos_Grupos { get; set; }

    public virtual DbSet<Modelos_Partidas> Modelos_Partidas { get; set; }

    public virtual DbSet<Modelos_Precios_Unitarios> Modelos_Precios_Unitarios { get; set; }

    public virtual DbSet<Productos> Productos { get; set; }

    public virtual DbSet<Proyectos> Proyectos { get; set; }

    public virtual DbSet<Proyectos_Tipos> Proyectos_Tipos { get; set; }

    public virtual DbSet<Relacion_Modelos_Grupos> Relacion_Modelos_Grupos { get; set; }

    public virtual DbSet<Relacion_Precios_Unitarios_Insumos> Relacion_Precios_Unitarios_Insumos { get; set; }

    public virtual DbSet<ReportesDestajos> ReportesDestajos { get; set; }

    public virtual DbSet<ReportesDestajos_Estatus> ReportesDestajos_Estatus { get; set; }

    public virtual DbSet<ReportesDestajos_Partidas> ReportesDestajos_Partidas { get; set; }

    public virtual DbSet<ReportesDestajos_Partidas_Fotos> ReportesDestajos_Partidas_Fotos { get; set; }

    public virtual DbSet<ReportesDestajos_Partidas_Lotes> ReportesDestajos_Partidas_Lotes { get; set; }

    public virtual DbSet<Secciones> Secciones { get; set; }

    public virtual DbSet<Secciones_Explosiones_Insumos> Secciones_Explosiones_Insumos { get; set; }

    public virtual DbSet<Secciones_Explosiones_Insumos_Detalle> Secciones_Explosiones_Insumos_Detalle { get; set; }

    public virtual DbSet<Secciones_Fases> Secciones_Fases { get; set; }

    public virtual DbSet<Secciones_Fases_Visitas> Secciones_Fases_Visitas { get; set; }

    public virtual DbSet<Secciones_Lotes> Secciones_Lotes { get; set; }

    public virtual DbSet<Secciones_Lotes_Modelos_Evidencias> Secciones_Lotes_Modelos_Evidencias { get; set; }

    public virtual DbSet<Secciones_Mano_Obra_Detalle> Secciones_Mano_Obra_Detalle { get; set; }

    public virtual DbSet<Secciones_Modelos_Casas> Secciones_Modelos_Casas { get; set; }

    public virtual DbSet<Sucursales> Sucursales { get; set; }

    public virtual DbSet<vContratistas> vContratistas { get; set; }

    public virtual DbSet<vEmpleados> vEmpleados { get; set; }

    public virtual DbSet<vInsumos> vInsumos { get; set; }

    public virtual DbSet<vInsumos_Modelos> vInsumos_Modelos { get; set; }

    public virtual DbSet<vLotes> vLotes { get; set; }

    public virtual DbSet<vModelosExplosionInsumos> vModelosExplosionInsumos { get; set; }

    public virtual DbSet<vProyectos> vProyectos { get; set; }

    public virtual DbSet<vProyectos_Secciones> vProyectos_Secciones { get; set; }

    public virtual DbSet<vReportesDestajos_Partidas_Fotos> vReportesDestajos_Partidas_Fotos { get; set; }

    public virtual DbSet<vSecciones_Lotes> vSecciones_Lotes { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<Cat_Estatus>(entity =>
        {
            entity.HasKey(e => e.Id_Estatus).HasName("PK__Cat_Esta__A114FD1B52C0B723");

            entity.ToTable("Cat_Estatus", "ProyectosConstruccion");

            entity.Property(e => e.Habilitado).HasDefaultValue(true);
            entity.Property(e => e.Nombre_ES)
                .IsRequired()
                .HasMaxLength(50);
            entity.Property(e => e.Resource_Key)
                .IsRequired()
                .HasMaxLength(50);
        });

        modelBuilder.Entity<Catalogo_Insumos_Unidades>(entity =>
        {
            entity.ToTable("Catalogo_Insumos_Unidades", "ProyectosConstruccion");

            entity.Property(e => e.Habilitado).HasDefaultValue(true);
            entity.Property(e => e.Name)
                .IsRequired()
                .HasMaxLength(10)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<Catalogos>(entity =>
        {
            entity.ToTable("Catalogos", "ProyectosConstruccion");

            entity.Property(e => e.Descripcion).IsRequired();
        });

        modelBuilder.Entity<Contratistas>(entity =>
        {
            entity.HasKey(e => e.Id_Contratista);

            entity.ToTable("Contratistas", "ProyectosConstruccion");

            entity.Property(e => e.Habilitado).HasDefaultValue(true);
        });

        modelBuilder.Entity<Empleados>(entity =>
        {
            entity.HasKey(e => e.IdEmpleado).HasName("PK__Empleado__CE6D8B9E42C09FAC");

            entity.ToTable("Empleados", "ProyectosConstruccion");

            entity.Property(e => e.Habilitado).HasDefaultValue(true);
        });

        modelBuilder.Entity<Fraccionamientos>(entity =>
        {
            entity.HasKey(e => e.Id_Fraccionamiento);

            entity.ToTable("Fraccionamientos", "ProyectosConstruccion");

            entity.Property(e => e.Fecha_Alta).HasColumnType("datetime");
            entity.Property(e => e.Fecha_Modificacion).HasColumnType("datetime");
            entity.Property(e => e.Folio)
                .IsRequired()
                .HasMaxLength(50)
                .HasDefaultValue("-");
            entity.Property(e => e.Logotipo).HasMaxLength(150);
            entity.Property(e => e.Nombre)
                .IsRequired()
                .HasMaxLength(100);
            entity.Property(e => e.UUID).HasDefaultValueSql("(newid())");
        });

        modelBuilder.Entity<Fraccionamientos_Etapas>(entity =>
        {
            entity.HasKey(e => e.Id_Fraccionamiento_Etapa);

            entity.ToTable("Fraccionamientos_Etapas", "ProyectosConstruccion");

            entity.Property(e => e.Descripcion).HasMaxLength(250);
            entity.Property(e => e.Nombre)
                .IsRequired()
                .HasMaxLength(50);
        });

        modelBuilder.Entity<Fraccionamientos_Etapas_Manzanas>(entity =>
        {
            entity.HasKey(e => e.Id_Fraccionamiento_Etapa_Manzana);

            entity.ToTable("Fraccionamientos_Etapas_Manzanas", "ProyectosConstruccion");

            entity.Property(e => e.Fecha_Alta).HasColumnType("datetime");
            entity.Property(e => e.Fecha_Modificacion).HasColumnType("datetime");
            entity.Property(e => e.Id_Fraccionamiento_Etapa).HasDefaultValue(1);
            entity.Property(e => e.Nombre)
                .IsRequired()
                .HasMaxLength(50);
        });

        modelBuilder.Entity<Insumos>(entity =>
        {
            entity.ToTable("Insumos", "ProyectosConstruccion");

            entity.Property(e => e.Codigo)
                .IsRequired()
                .HasMaxLength(10)
                .IsFixedLength();
            entity.Property(e => e.Descripcion)
                .IsRequired()
                .HasMaxLength(1500);
            entity.Property(e => e.Fecha_Alta).HasColumnType("datetime");
            entity.Property(e => e.Fecha_Modificacion).HasColumnType("datetime");
            entity.Property(e => e.Habilitado).HasDefaultValue(true);
        });

        modelBuilder.Entity<Lotes>(entity =>
        {
            entity.HasKey(e => e.Id_Lote);

            entity.ToTable("Lotes", "ProyectosConstruccion");

            entity.Property(e => e.Alineamiento).HasMaxLength(50);
            entity.Property(e => e.Amenidades).HasMaxLength(500);
            entity.Property(e => e.Avaluo).HasColumnType("money");
            entity.Property(e => e.Clave_Catastral).HasMaxLength(50);
            entity.Property(e => e.DTU).HasMaxLength(50);
            entity.Property(e => e.Escritura).HasMaxLength(15);
            entity.Property(e => e.Fecha_Alta).HasColumnType("datetime");
            entity.Property(e => e.Fecha_Escrituracion).HasColumnType("datetime");
            entity.Property(e => e.Fecha_Modificacion).HasColumnType("datetime");
            entity.Property(e => e.Folio)
                .IsRequired()
                .HasMaxLength(50)
                .HasDefaultValue("-");
            entity.Property(e => e.Habilitado).HasDefaultValue(true);
            entity.Property(e => e.Licencia_Construccion).HasMaxLength(50);
            entity.Property(e => e.Precio_Metro).HasColumnType("money");
            entity.Property(e => e.Registro_Obra).HasMaxLength(50);
            entity.Property(e => e.Terminacion_Obra).HasMaxLength(50);
            entity.Property(e => e.UUID).HasDefaultValueSql("(newid())");
            entity.Property(e => e.Valor_Escrituracion).HasColumnType("money");
            entity.Property(e => e.Valor_Terreno).HasColumnType("money");
            entity.Property(e => e.Valor_Total_Inmueble).HasColumnType("money");
            entity.Property(e => e.Vista).HasMaxLength(50);
        });

        modelBuilder.Entity<Lotes_Propietarios>(entity =>
        {
            entity.HasKey(e => e.Id_Lote_Propietario);

            entity.ToTable("Lotes_Propietarios", "ProyectosConstruccion");

            entity.Property(e => e.Fecha_Fin).HasColumnType("datetime");
            entity.Property(e => e.Fecha_Inicio).HasColumnType("datetime");
        });

        modelBuilder.Entity<Modelos>(entity =>
        {
            entity.HasKey(e => e.ID_Modelo);

            entity.ToTable("Modelos", "ProyectosConstruccion");

            entity.Property(e => e.Fecha_Alta).HasColumnType("datetime");
            entity.Property(e => e.Fecha_Modificacion).HasColumnType("datetime");
            entity.Property(e => e.Folio)
                .IsRequired()
                .HasMaxLength(50)
                .HasDefaultValue("-");
            entity.Property(e => e.Nombre)
                .IsRequired()
                .HasMaxLength(50);
            entity.Property(e => e.UUID).HasDefaultValueSql("(newid())");
        });

        modelBuilder.Entity<Modelos_Grupos>(entity =>
        {
            entity.HasKey(e => e.ID_Modelo_Grupo);

            entity.ToTable("Modelos_Grupos", "ProyectosConstruccion");

            entity.Property(e => e.Descripcion)
                .IsRequired()
                .HasMaxLength(50);
        });

        modelBuilder.Entity<Modelos_Partidas>(entity =>
        {
            entity.HasKey(e => e.ID_Modelo_Partida);

            entity.ToTable("Modelos_Partidas", "ProyectosConstruccion");

            entity.Property(e => e.Descripcion)
                .IsRequired()
                .HasMaxLength(50);
        });

        modelBuilder.Entity<Modelos_Precios_Unitarios>(entity =>
        {
            entity.HasKey(e => e.ID_Modelo_Precio_Unitario);

            entity.ToTable("Modelos_Precios_Unitarios", "ProyectosConstruccion");

            entity.Property(e => e.Descripcion)
                .IsRequired()
                .HasMaxLength(500);
        });

        modelBuilder.Entity<Productos>(entity =>
        {
            entity.HasKey(e => e.Id_Producto).HasName("PK__Producto__2085A9CFFB61B95D");

            entity.ToTable("Productos", "ProyectosConstruccion");

            entity.Property(e => e.Id_Producto).ValueGeneratedNever();
            entity.Property(e => e.Costo).HasColumnType("money");
            entity.Property(e => e.Costo_Maximo).HasColumnType("money");
            entity.Property(e => e.Costo_Minimo).HasColumnType("money");
            entity.Property(e => e.Costo_Retenido).HasColumnType("money");
            entity.Property(e => e.Cuenta_Contable).HasMaxLength(50);
            entity.Property(e => e.Descripcion)
                .IsRequired()
                .HasMaxLength(250);
            entity.Property(e => e.Fecha_Alta).HasColumnType("datetime");
            entity.Property(e => e.Fecha_Modificacion).HasColumnType("datetime");
            entity.Property(e => e.Folio)
                .IsRequired()
                .HasMaxLength(50)
                .HasDefaultValue("-");
            entity.Property(e => e.Observaciones).HasMaxLength(500);
            entity.Property(e => e.UUID).HasDefaultValueSql("(newid())");
        });

        modelBuilder.Entity<Proyectos>(entity =>
        {
            entity.HasKey(e => e.Id_Proyecto);

            entity.ToTable("Proyectos", "ProyectosConstruccion");

            entity.Property(e => e.Fecha_Alta).HasColumnType("datetime");
            entity.Property(e => e.Fecha_Inicio).HasColumnType("datetime");
            entity.Property(e => e.Fecha_Inicio_Proyectada).HasColumnType("datetime");
            entity.Property(e => e.Fecha_Modificacion).HasColumnType("datetime");
            entity.Property(e => e.Fecha_Terminacion).HasColumnType("datetime");
            entity.Property(e => e.Fecha_Terminacion_Proyectada).HasColumnType("datetime");
            entity.Property(e => e.Folio)
                .IsRequired()
                .HasMaxLength(50)
                .HasDefaultValue("-");
            entity.Property(e => e.Habilitado).HasDefaultValue(true);
            entity.Property(e => e.Nombre)
                .IsRequired()
                .HasMaxLength(50);
            entity.Property(e => e.UUID).HasDefaultValueSql("(newid())");
        });

        modelBuilder.Entity<Proyectos_Tipos>(entity =>
        {
            entity.HasKey(e => e.Id_Tipo).HasName("PK__tmp_ms_x__064163928DD214BA");

            entity.ToTable("Proyectos_Tipos", "ProyectosConstruccion");

            entity.Property(e => e.Habilitado).HasDefaultValue(true);
            entity.Property(e => e.Icon).HasMaxLength(50);
            entity.Property(e => e.Nombre)
                .IsRequired()
                .HasMaxLength(20);
        });

        modelBuilder.Entity<Relacion_Modelos_Grupos>(entity =>
        {
            entity.ToTable("Relacion_Modelos_Grupos", "ProyectosConstruccion");

            entity.Property(e => e.Fecha_Alta).HasColumnType("datetime");
            entity.Property(e => e.Fecha_Modificacion).HasColumnType("datetime");
        });

        modelBuilder.Entity<Relacion_Precios_Unitarios_Insumos>(entity =>
        {
            entity.HasKey(e => e.ID).HasName("PK_Relacion_Precio_Unitario_Insumos");

            entity.ToTable("Relacion_Precios_Unitarios_Insumos", "ProyectosConstruccion");

            entity.Property(e => e.Habilitado).HasDefaultValue(true);
            entity.Property(e => e.Precio).HasColumnType("decimal(18, 2)");
            entity.Property(e => e.Volumen).HasColumnType("decimal(18, 4)");

            entity.HasOne(d => d.Id_InsumoNavigation).WithMany(p => p.Relacion_Precios_Unitarios_Insumos)
                .HasForeignKey(d => d.Id_Insumo)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Relacion_Precios_Unitarios_Insumos_Insumos");
        });

        modelBuilder.Entity<ReportesDestajos>(entity =>
        {
            entity.HasKey(e => e.IdReporteDestajo).HasName("PK_ReportesDestajos_IdReporteDestajo");

            entity.ToTable("ReportesDestajos", "ProyectosConstruccion");

            entity.Property(e => e.FechaAlta).HasColumnType("datetime");
            entity.Property(e => e.FechaElimina).HasColumnType("datetime");
            entity.Property(e => e.FechaModifica).HasColumnType("datetime");
            entity.Property(e => e.NotasReporte)
                .IsRequired()
                .HasMaxLength(500)
                .HasDefaultValue("");

            entity.HasOne(d => d.IdReporteDestajoEstatusNavigation).WithMany(p => p.ReportesDestajos)
                .HasForeignKey(d => d.IdReporteDestajoEstatus)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_ReportesDestajos_IdReporteDestajoEstatus");
        });

        modelBuilder.Entity<ReportesDestajos_Estatus>(entity =>
        {
            entity.HasKey(e => e.IdReporteDestajoEstatus).HasName("PK_ReportesDestajos_Estatus_IdReporteDestajoEstatus");

            entity.ToTable("ReportesDestajos_Estatus", "ProyectosConstruccion");

            entity.Property(e => e.DarkColorHex)
                .IsRequired()
                .HasMaxLength(7)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.Estatus)
                .IsRequired()
                .HasMaxLength(50);
            entity.Property(e => e.EstatusEN)
                .IsRequired()
                .HasMaxLength(50);
            entity.Property(e => e.GlyphIcon)
                .IsRequired()
                .HasMaxLength(20);
            entity.Property(e => e.LightColorHex)
                .IsRequired()
                .HasMaxLength(7)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<ReportesDestajos_Partidas>(entity =>
        {
            entity.HasKey(e => e.IdReporteDestajoPartida).HasName("PK_ReportesDestajos_Partidas_IdReporteDestajoPartida");

            entity.ToTable("ReportesDestajos_Partidas", "ProyectosConstruccion");

            entity.Property(e => e.FechaAlta).HasColumnType("datetime");
            entity.Property(e => e.FechasSupervisado).HasColumnType("datetime");
            entity.Property(e => e.Notas).HasMaxLength(500);
            entity.Property(e => e.NotasContratista)
                .IsRequired()
                .HasMaxLength(500)
                .HasDefaultValue("");
            entity.Property(e => e.NotasSupervisor)
                .IsRequired()
                .HasMaxLength(500)
                .HasDefaultValue("");

            entity.HasOne(d => d.IdReporteDestajoNavigation).WithMany(p => p.ReportesDestajos_Partidas)
                .HasForeignKey(d => d.IdReporteDestajo)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_ReportesDestajos_Partidas_IdReporteDestajo");
        });

        modelBuilder.Entity<ReportesDestajos_Partidas_Fotos>(entity =>
        {
            entity.HasKey(e => e.IdReporteDestajoPartidaFoto).HasName("PK_ReportesDestajos_Partidas_Fotos_IdReporteDestajoPartidaFoto");

            entity.ToTable("ReportesDestajos_Partidas_Fotos", "ProyectosConstruccion");

            entity.Property(e => e.FechaCaptura).HasColumnType("datetime");
            entity.Property(e => e.FechaSincronizacion).HasColumnType("datetime");

            entity.HasOne(d => d.IdReporteDestajoPartidaNavigation).WithMany(p => p.ReportesDestajos_Partidas_Fotos)
                .HasForeignKey(d => d.IdReporteDestajoPartida)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_ReportesDestajos_Partidas_Fotos_IdReporteDestajoPartida");
        });

        modelBuilder.Entity<ReportesDestajos_Partidas_Lotes>(entity =>
        {
            entity.HasKey(e => e.IdReporteDestajoPartidaLote).HasName("PK_ReportesDestajos_Partidas_Lotes_IdReporteDestajoPartidaLote");

            entity.ToTable("ReportesDestajos_Partidas_Lotes", "ProyectosConstruccion");

            entity.HasOne(d => d.IdLoteNavigation).WithMany(p => p.ReportesDestajos_Partidas_Lotes)
                .HasForeignKey(d => d.IdLote)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_ReportesDestajos_Partidas_Lotes_IdLote");
        });

        modelBuilder.Entity<Secciones>(entity =>
        {
            entity.HasKey(e => e.Id_Seccion);

            entity.ToTable("Secciones", "ProyectosConstruccion");

            entity.Property(e => e.Fecha_Alta).HasColumnType("datetime");
            entity.Property(e => e.Fecha_Inicio).HasColumnType("datetime");
            entity.Property(e => e.Fecha_Inicio_Proyectada).HasColumnType("datetime");
            entity.Property(e => e.Fecha_Modificacion).HasColumnType("datetime");
            entity.Property(e => e.Fecha_Terminacion).HasColumnType("datetime");
            entity.Property(e => e.Fecha_Terminacion_Proyectada).HasColumnType("datetime");
            entity.Property(e => e.Folio)
                .IsRequired()
                .HasMaxLength(50)
                .HasDefaultValue("-");
            entity.Property(e => e.Habilitado).HasDefaultValue(true);
            entity.Property(e => e.Nombre)
                .IsRequired()
                .HasMaxLength(50);
            entity.Property(e => e.UUID).HasDefaultValueSql("(newid())");

            entity.HasOne(d => d.Id_ModeloNavigation).WithMany(p => p.Secciones)
                .HasForeignKey(d => d.Id_Modelo)
                .HasConstraintName("FK_Secciones_Modelos");
        });

        modelBuilder.Entity<Secciones_Explosiones_Insumos>(entity =>
        {
            entity.HasKey(e => e.Id_Seccion_Explosion_Insumos);

            entity.ToTable("Secciones_Explosiones_Insumos", "ProyectosConstruccion");

            entity.Property(e => e.Folio)
                .IsRequired()
                .HasMaxLength(50)
                .HasDefaultValue("-");
            entity.Property(e => e.Honorarios).HasColumnType("money");
            entity.Property(e => e.Incremento_Mano_Obra).HasColumnType("money");
            entity.Property(e => e.Total).HasColumnType("money");
            entity.Property(e => e.Total_Insumos).HasColumnType("money");
            entity.Property(e => e.UUID).HasDefaultValueSql("(newid())");
        });

        modelBuilder.Entity<Secciones_Explosiones_Insumos_Detalle>(entity =>
        {
            entity.HasKey(e => e.Id_Secciones_Explosiones_Insumos_Detalle);

            entity.ToTable("Secciones_Explosiones_Insumos_Detalle", "ProyectosConstruccion");

            entity.Property(e => e.Costo_Unitario).HasColumnType("money");
            entity.Property(e => e.Importe).HasColumnType("money");
        });

        modelBuilder.Entity<Secciones_Fases>(entity =>
        {
            entity.HasKey(e => e.Id_Seccion_Fase);

            entity.ToTable("Secciones_Fases", "ProyectosConstruccion");

            entity.Property(e => e.Habilitado).HasDefaultValue(true);
            entity.Property(e => e.Nombre)
                .IsRequired()
                .HasMaxLength(50);
        });

        modelBuilder.Entity<Secciones_Fases_Visitas>(entity =>
        {
            entity.HasKey(e => e.Id_Seccion_Fase_Visita);

            entity.ToTable("Secciones_Fases_Visitas", "ProyectosConstruccion");

            entity.Property(e => e.Fecha).HasColumnType("datetime");
            entity.Property(e => e.Notas)
                .IsRequired()
                .HasMaxLength(2500);
        });

        modelBuilder.Entity<Secciones_Lotes>(entity =>
        {
            entity.HasKey(e => new { e.Id_Seccion_Lotes, e.Id_Seccion, e.Id_Lote, e.Id_Modelo });

            entity.ToTable("Secciones_Lotes", "ProyectosConstruccion");

            entity.Property(e => e.Id_Seccion_Lotes).ValueGeneratedOnAdd();
            entity.Property(e => e.Habilitado).HasDefaultValue(true);
        });

        modelBuilder.Entity<Secciones_Lotes_Modelos_Evidencias>(entity =>
        {
            entity.HasKey(e => e.Id_Seccion_Lote_Modelo_Evidencia);

            entity.ToTable("Secciones_Lotes_Modelos_Evidencias", "ProyectosConstruccion");

            entity.Property(e => e.Foto)
                .IsRequired()
                .HasMaxLength(250);
        });

        modelBuilder.Entity<Secciones_Mano_Obra_Detalle>(entity =>
        {
            entity.HasKey(e => e.Id_Seccion_Mano_Obra_Detalle);

            entity.ToTable("Secciones_Mano_Obra_Detalle", "ProyectosConstruccion");

            entity.Property(e => e.Costo_Unitario).HasColumnType("money");
            entity.Property(e => e.Importe).HasColumnType("money");
        });

        modelBuilder.Entity<Secciones_Modelos_Casas>(entity =>
        {
            entity.HasKey(e => e.Id_Seccion_Modelo_Casa);

            entity.ToTable("Secciones_Modelos_Casas", "ProyectosConstruccion");
        });

        modelBuilder.Entity<Sucursales>(entity =>
        {
            entity.HasKey(e => e.Id_Sucursales);

            entity.ToTable("Sucursales", "ProyectosConstruccion");

            entity.Property(e => e.Folio)
                .IsRequired()
                .HasMaxLength(50)
                .HasDefaultValue("-");
            entity.Property(e => e.Nombre)
                .IsRequired()
                .HasMaxLength(250);
            entity.Property(e => e.RFC)
                .IsRequired()
                .HasMaxLength(15);
            entity.Property(e => e.UUID).HasDefaultValueSql("(newid())");
        });

        modelBuilder.Entity<vContratistas>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("vContratistas", "ProyectosConstruccion");

            entity.Property(e => e.Genero).HasMaxLength(1);
            entity.Property(e => e.Nombres).HasMaxLength(100);
            entity.Property(e => e.PrimerApellido).HasMaxLength(100);
            entity.Property(e => e.SegundoApellido).HasMaxLength(100);
        });

        modelBuilder.Entity<vEmpleados>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("vEmpleados", "ProyectosConstruccion");

            entity.Property(e => e.Genero).HasMaxLength(1);
            entity.Property(e => e.Nombres).HasMaxLength(100);
            entity.Property(e => e.PrimerApellido).HasMaxLength(100);
            entity.Property(e => e.SegundoApellido).HasMaxLength(100);
        });

        modelBuilder.Entity<vInsumos>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("vInsumos", "ProyectosConstruccion");

            entity.Property(e => e.Codigo)
                .IsRequired()
                .HasMaxLength(10)
                .IsFixedLength();
            entity.Property(e => e.Descripcion)
                .IsRequired()
                .HasMaxLength(250);
            entity.Property(e => e.Tipo_Insumo).IsRequired();
        });

        modelBuilder.Entity<vInsumos_Modelos>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("vInsumos_Modelos", "ProyectosConstruccion");

            entity.Property(e => e.Insumo)
                .IsRequired()
                .HasMaxLength(50);
            entity.Property(e => e.Partida)
                .IsRequired()
                .HasMaxLength(50);
            entity.Property(e => e.Precio_Unitario)
                .IsRequired()
                .HasMaxLength(50);
            entity.Property(e => e.Tipo_Insumo).IsRequired();
            entity.Property(e => e.Unidad).IsRequired();
            entity.Property(e => e.Volumen).HasColumnType("decimal(18, 0)");
        });

        modelBuilder.Entity<vLotes>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("vLotes", "ProyectosConstruccion");

            entity.Property(e => e.Alineamiento).HasMaxLength(50);
            entity.Property(e => e.Amenidades).HasMaxLength(500);
            entity.Property(e => e.Avaluo).HasColumnType("money");
            entity.Property(e => e.Clave_Catastral).HasMaxLength(50);
            entity.Property(e => e.DTU).HasMaxLength(50);
            entity.Property(e => e.Escritura).HasMaxLength(15);
            entity.Property(e => e.Etapa)
                .IsRequired()
                .HasMaxLength(50);
            entity.Property(e => e.Fecha_Alta).HasColumnType("datetime");
            entity.Property(e => e.Fecha_Escrituracion).HasColumnType("datetime");
            entity.Property(e => e.Folio)
                .IsRequired()
                .HasMaxLength(50);
            entity.Property(e => e.Fraccionamieno)
                .IsRequired()
                .HasMaxLength(100);
            entity.Property(e => e.Licencia_Construccion).HasMaxLength(50);
            entity.Property(e => e.Manzana)
                .IsRequired()
                .HasMaxLength(50);
            entity.Property(e => e.Modelo)
                .IsRequired()
                .HasMaxLength(50);
            entity.Property(e => e.Precio_Metro).HasColumnType("money");
            entity.Property(e => e.Registro_Obra).HasMaxLength(50);
            entity.Property(e => e.Terminacion_Obra).HasMaxLength(50);
            entity.Property(e => e.Valor_Escrituracion).HasColumnType("money");
            entity.Property(e => e.Valor_Terreno).HasColumnType("money");
            entity.Property(e => e.Valor_Total_Inmueble).HasColumnType("money");
            entity.Property(e => e.Vista).HasMaxLength(50);
        });

        modelBuilder.Entity<vModelosExplosionInsumos>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("vModelosExplosionInsumos", "ProyectosConstruccion");

            entity.Property(e => e.Grupo)
                .IsRequired()
                .HasMaxLength(50);
            entity.Property(e => e.Insumo)
                .IsRequired()
                .HasMaxLength(250);
            entity.Property(e => e.Modelo)
                .IsRequired()
                .HasMaxLength(50);
            entity.Property(e => e.Partida)
                .IsRequired()
                .HasMaxLength(50);
            entity.Property(e => e.Precio).HasColumnType("decimal(18, 2)");
            entity.Property(e => e.Precio_Unitario)
                .IsRequired()
                .HasMaxLength(250);
            entity.Property(e => e.Tipo).IsRequired();
            entity.Property(e => e.Unidad)
                .IsRequired()
                .HasMaxLength(10)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.Volumen).HasColumnType("decimal(18, 4)");
        });

        modelBuilder.Entity<vProyectos>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("vProyectos", "ProyectosConstruccion");

            entity.Property(e => e.Encargado).HasMaxLength(100);
            entity.Property(e => e.Estatus)
                .IsRequired()
                .HasMaxLength(50);
            entity.Property(e => e.Fecha_Alta).HasColumnType("datetime");
            entity.Property(e => e.Fecha_Inicio_Proyectada).HasColumnType("datetime");
            entity.Property(e => e.Fecha_Terminacion_Proyectada).HasColumnType("datetime");
            entity.Property(e => e.Folio)
                .IsRequired()
                .HasMaxLength(50);
            entity.Property(e => e.Fraccionamiento).HasMaxLength(100);
            entity.Property(e => e.Proyecto)
                .IsRequired()
                .HasMaxLength(50);
            entity.Property(e => e.TipoProyecto).HasMaxLength(20);
            entity.Property(e => e.Unidad_Negocio).HasMaxLength(250);
        });

        modelBuilder.Entity<vProyectos_Secciones>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("vProyectos_Secciones", "ProyectosConstruccion");

            entity.Property(e => e.Contratista)
                .IsRequired()
                .HasMaxLength(201);
            entity.Property(e => e.Fecha_Inicio)
                .IsRequired()
                .HasMaxLength(4000);
            entity.Property(e => e.Fecha_Inicio_Proyectada)
                .IsRequired()
                .HasMaxLength(4000);
            entity.Property(e => e.Fecha_Terminacion)
                .IsRequired()
                .HasMaxLength(4000);
            entity.Property(e => e.Fecha_Terminacion_Proyectada)
                .IsRequired()
                .HasMaxLength(4000);
            entity.Property(e => e.Proyecto)
                .IsRequired()
                .HasMaxLength(50);
            entity.Property(e => e.Seccion)
                .IsRequired()
                .HasMaxLength(50);
        });

        modelBuilder.Entity<vReportesDestajos_Partidas_Fotos>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("vReportesDestajos_Partidas_Fotos", "ProyectosConstruccion");

            entity.Property(e => e.Extension)
                .IsRequired()
                .HasMaxLength(20);
            entity.Property(e => e.FechaAlta).HasColumnType("datetime");
            entity.Property(e => e.FechaCaptura).HasColumnType("datetime");
            entity.Property(e => e.FechaSincronizacion).HasColumnType("datetime");
            entity.Property(e => e.MimeType)
                .IsRequired()
                .HasMaxLength(250);
            entity.Property(e => e.NombreOriginal)
                .IsRequired()
                .HasMaxLength(256);
            entity.Property(e => e.RutaRelativa)
                .IsRequired()
                .HasMaxLength(256);
            entity.Property(e => e.TipoArchivo)
                .IsRequired()
                .HasMaxLength(100);
        });

        modelBuilder.Entity<vSecciones_Lotes>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("vSecciones_Lotes", "ProyectosConstruccion");

            entity.Property(e => e.Fraccionamiento)
                .IsRequired()
                .HasMaxLength(100);
            entity.Property(e => e.Fraccionamiento_Etapa)
                .IsRequired()
                .HasMaxLength(50);
            entity.Property(e => e.Manzana)
                .IsRequired()
                .HasMaxLength(50);
            entity.Property(e => e.Proyecto)
                .IsRequired()
                .HasMaxLength(50);
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}