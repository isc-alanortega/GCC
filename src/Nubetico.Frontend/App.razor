@using Nubetico.Frontend.Models.Static.Core
@using Nubetico.Frontend.Services.Core
@using Nubetico.Shared.Dto.Core

@inject CustomizationService CustomizationService
@inject IJSRuntime JSRuntime
@inject NavigationManager NavigationManager

<PageTitle>@NombreWeb</PageTitle>

<CascadingAuthenticationState>
    <Router AppAssembly="@typeof(App).Assembly">
        <Found Context="routeData">
            <AuthorizeRouteView RouteData="@routeData" DefaultLayout="@typeof(MainLayout)">
                <Authorizing>
                    <text>Please wait, we are authorizing you...</text>
                </Authorizing>
                <NotAuthorized>
                    @{
                        var uri = NavigationManager.ToBaseRelativePath(NavigationManager.Uri);
                        NavigationManager.NavigateTo($"/login/{uri}");
                    }
                </NotAuthorized>
            </AuthorizeRouteView>
            <FocusOnNavigate RouteData="@routeData" Selector="h1" />
        </Found>
        <NotFound>
            <PageTitle>Not found</PageTitle>
            <LayoutView Layout="@typeof(EmptyLayout)">
                <p role="alert">Sorry, there's nothing at this address.</p>
            </LayoutView>
        </NotFound>
    </Router>
</CascadingAuthenticationState>

@code {
    public string NombreWeb { get; set; } = "nubetico";

    protected override async Task OnInitializedAsync()
    {       
        NombreWeb = await JSRuntime.InvokeAsync<string>("localStorage.getItem", LocalStorageKeys.WebName);
    }
}
