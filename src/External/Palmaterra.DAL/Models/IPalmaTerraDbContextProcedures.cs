// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using Microsoft.Data.SqlClient;
using Microsoft.EntityFrameworkCore;
using Palmaterra.DAL.Models;
using System;
using System.Collections.Generic;
using System.Data;
using System.Threading;
using System.Threading.Tasks;

namespace Palmaterra.DAL.Models
{
    public partial interface IPalmaTerraDbContextProcedures
    {
        Task<List<sp_auto_select_datos_obraResult>> sp_auto_select_datos_obraAsync(int? filtro, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<sp_cat_facturas_comprasResult>> sp_cat_facturas_comprasAsync(DateTime? dateFrom, DateTime? dateTo, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<sp_cat_segmentos_contables_generalesResult>> sp_cat_segmentos_contables_generalesAsync(string filtro, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> sp_create_vehiculoAsync(string placas, string nombre, string marca, string modelo, string vIN, int? moneda, decimal? tipoCambio, decimal? costo, int? iDResponsable, string polizaSeguro, string rutaFotografia, bool? habilitado, int? iDUsuarioAlta, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<sp_destajo_archivo_guardarResult>> sp_destajo_archivo_guardarAsync(string folioDestajo, int? fileContentLength, int? iDResidente, string accion, string iDsDestajos, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<sp_destajo_encabezado_addResult>> sp_destajo_encabezado_addAsync(int? idResidente, OutputParameter<string> folio, OutputParameter<int?> idDestajo, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> sp_destajo_get_nombrearchivoAsync(int? iDDestajo, OutputParameter<string> nombreArchivoSP, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> sp_destajo_guardarAsync(int? iDRegistroEdit, int? iDObra, int? iDGasto, int? iDTrabajo, int? iDResidente, string otroConcepto, DateTime? fechaPagoEstimado, decimal? montoSolicitado, string obs, int? iDRol, bool? esContador, bool? eliminarArchivo, string accion, OutputParameter<int?> iDRegistro, OutputParameter<string> nombreArchivo, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> sp_destajo_pagarAsync(int? iDDestajo, decimal? montoEntregado, bool? autorizado, int? iDContador, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> sp_destajo_revisarAsync(int? iDDestajo, string obsRevisa, decimal? montoEntregado, bool? autorizado, int? iDCoordinador, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> sp_destajo_solicitud_addAsync(int? idEncabezadoDestajo, string folio, int? iDResidente, int? iDObra, int? iDTrabajo, int? idCoordinacion, int? iDGasto, decimal? montoSolicitado, string obs, DateTime? fechaPagoEstimado, int? iDRol, bool? esContador, int? tipoCapturaDestajista, OutputParameter<int?> iDRegistro, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> sp_destajos_get_data_by_filterAsync(int? tipoConsulta, DateOnly? dateFrom, int? idResidente, DateOnly? dateTo, int? idObra, int? idRol, string idFiltroEstatus, string txtBusqueda, int? idFiltroResidentes, bool? esContador, bool? esCoordinador, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> sp_destajos_get_destajos_gastosAsync(int? idResidente, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> sp_factura_precompraAsync(int? iDRegistroEdit, int? idproveedor, string fechafactura, string fecharecepcion, string numero, int? idobra, int? idresidente, string monto, string saldo, DateTime? fechaAlta, int? usuarioAlta, string accion, OutputParameter<int?> iDRegistro, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<sp_get_cat_destajos_tiposResult>> sp_get_cat_destajos_tiposAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<sp_get_cat_orden_compraResult>> sp_get_cat_orden_compraAsync(int? filtro, DateTime? dateFrom, DateTime? dateTo, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<sp_get_cat_vehiculosResult>> sp_get_cat_vehiculosAsync(string filtro, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<sp_get_catalogo_orden_compraResult>> sp_get_catalogo_orden_compraAsync(int? filtro, DateTime? dateFrom, DateTime? dateTo, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<sp_get_datos_orden_compraResult>> sp_get_datos_orden_compraAsync(int? filtro, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<sp_get_datos_orden_compra_detalleResult>> sp_get_datos_orden_compra_detalleAsync(int? filtro, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<sp_get_destajo_tipo_trabajo_gastos_generalesResult>> sp_get_destajo_tipo_trabajo_gastos_generalesAsync(int? filtro, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<sp_get_detalle_prov_facturaResult>> sp_get_detalle_prov_facturaAsync(int? filtro, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<sp_get_empleados_destajosResult>> sp_get_empleados_destajosAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<sp_get_equipo_menorResult>> sp_get_equipo_menorAsync(string filtro, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<sp_get_facturas_pendientes_pagoResult>> sp_get_facturas_pendientes_pagoAsync(string dateFrom, string dateTo, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<sp_get_obraResult>> sp_get_obraAsync(int? filtro, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<sp_get_obras_destajoResult>> sp_get_obras_destajoAsync(int? iDTipoDestajoObra, int? iDEmpleado, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<sp_get_rel_destajos_tipos_gastosResult>> sp_get_rel_destajos_tipos_gastosAsync(int? iDResidente, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<sp_get_rel_destajos_tipostrabajoResult>> sp_get_rel_destajos_tipostrabajoAsync(int? filtro, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<sp_get_rel_gasto_trabajoResult>> sp_get_rel_gasto_trabajoAsync(int? iDGasto, int? iDResidente, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<sp_get_reporte_obrasResult>> sp_get_reporte_obrasAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<sp_get_reporte_orden_compraResult>> sp_get_reporte_orden_compraAsync(string dateFrom, string dateTo, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> sp_get_reporte_pdf_paths_facturas_proveedoresAsync(string dateFrom, string dateTo, string typeDate, int? iDObra, int? iDProveedor, int? estatus, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<sp_get_rol_empleado_destajoResult>> sp_get_rol_empleado_destajoAsync(int? iDEmpleado, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<sp_get_segmento_contable_ciudad_estadoResult>> sp_get_segmento_contable_ciudad_estadoAsync(int? iDCiudad, int? iDEstado, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<sp_get_solicitud_destajoResult>> sp_get_solicitud_destajoAsync(int? filtro, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> sp_orden_compraAsync(int? iDRegistroEdit, int? idproveedor, int? idsolicitante, int? idobra, string fechaorden, string observaciones, int? usuarioAlta, string accion, int? tipoOrdenCompra, OutputParameter<int?> iDRegistro, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> sp_orden_compra_detalleAsync(int? iDRegistroEdit, string accion, int? idordencompra, int? idproducto, int? idfactura, int? iddetalle, int? idembalaje, string cantidad, string precio, int? usuarioAlta, OutputParameter<int?> iDRegistro, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<sp_pagosResult>> sp_pagosAsync(int? iDProveedor, DateTime? fecha, decimal? monto, int? iDUsuario, string comprobante, string estado, string observaciones, OutputParameter<int?> iDPago, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> sp_presentacionesAsync(int? iDRegistroEdit, string nombre, string peso, int? um, string accion, OutputParameter<int?> iDRegistro, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> sp_productosAsync(int? iDRegistroEdit, string accion, string nombre, bool? esGranel, int? iDEmbalaje, int? iDUnidadMedida, DateTime? fechaAlta, int? usuarioAlta, OutputParameter<int?> iDRegistro, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> sp_productos_detalleAsync(int? iDRegistroEdit, int? idfactura, int? idproducto, int? idunidadmedida, int? idembalaje, string cantidad, string cantidadrestante, string precio, string iva, string antesimpuestos, string ivamonto, string subtotal, int? usuarioAlta, string accion, OutputParameter<int?> iDRegistro, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> sp_reembolso_archivo_guardarAsync(string nombreArchivo, int? iDRefund, int? iDTipoDoc, int? fileContentLength, string fileExt, string accion, bool? altaFactura, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> sp_reembolso_archivoxml_guardarAsync(string nombreArchivo, int? iDRefund, int? iDTipoDoc, int? fileContentLength, string proveedorNombre, string proveedorRFC, string factUUID, string factNumero, decimal? factMonto, string factFecha, string accion, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> sp_reembolso_get_nombrearchivoAsync(int? iDRefund, OutputParameter<string> nombreArchivoSP, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> sp_reembolso_guardarAsync(int? iDRegistroEdit, int? iDObra, int? iDTipoPago, int? iDTipoDoc, int? iDResidente, int? iDConcepto, int? iDCoordinador, int? iDUsuarioSolicita, int? iDRol, decimal? montoManual, string nombreProvManual, string numTicketManual, string obs, bool? esCoordinador, bool? esContador, string accion, OutputParameter<int?> iDRegistro, OutputParameter<string> nombreArchivo, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> sp_reembolso_pagarAsync(int? iDRefund, bool? autorizado, int? iDContador, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> sp_reembolso_revisarAsync(int? iDRefund, string obsRevisa, bool? autorizado, int? iDCoordinador, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<sp_reporte_imprimir_orden_compraResult>> sp_reporte_imprimir_orden_compraAsync(int? filtro, int? filtro2, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<sp_reporte_programacionResult>> sp_reporte_programacionAsync(DateTime? dateFrom, DateTime? dateTo, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> sp_segmento_contable_addAsync(string segmento, OutputParameter<bool?> success, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> sp_set_delete_destajoAsync(int? filtro, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> sp_set_orden_compraAsync(int? iDRegistroEdit, int? idproveedor, int? idsolicitante, int? idobra, string fechaorden, string observaciones, int? usuarioAlta, string accion, int? tipoOrdenCompra, OutputParameter<int?> iDRegistro, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> sp_update_vehiculoAsync(int? iDVehiculo, string placas, string nombre, string marca, string modelo, string vIN, int? moneda, decimal? tipoCambio, decimal? costo, int? iDResponsable, string polizaSeguro, string rutaFotografia, bool? habilitado, int? iDUsuarioModificacion, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
    }
}
