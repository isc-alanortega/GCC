// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace Palmaterra.DAL.Models;

public partial class PalmaTerraDbContext : DbContext
{
    public PalmaTerraDbContext(DbContextOptions<PalmaTerraDbContext> options)
        : base(options)
    {
    }

    public virtual DbSet<Almacenes> Almacenes { get; set; }

    public virtual DbSet<Almacenes_Existencias> Almacenes_Existencias { get; set; }

    public virtual DbSet<Almacenes_Movimientos> Almacenes_Movimientos { get; set; }

    public virtual DbSet<Almacenes_Movimientos_Partidas> Almacenes_Movimientos_Partidas { get; set; }

    public virtual DbSet<Almacenes_TiposMovimientos> Almacenes_TiposMovimientos { get; set; }

    public virtual DbSet<Cat_Categoria_Obra> Cat_Categoria_Obra { get; set; }

    public virtual DbSet<Cat_Destajos_Cuenta> Cat_Destajos_Cuenta { get; set; }

    public virtual DbSet<Cat_Destajos_Relacion_Gastos_Trabajos> Cat_Destajos_Relacion_Gastos_Trabajos { get; set; }

    public virtual DbSet<Cat_Destajos_Tipos> Cat_Destajos_Tipos { get; set; }

    public virtual DbSet<Cat_Destajos_Tipos_Gastos> Cat_Destajos_Tipos_Gastos { get; set; }

    public virtual DbSet<Cat_Destajos_Tipos_Trabajo> Cat_Destajos_Tipos_Trabajo { get; set; }

    public virtual DbSet<Cat_Destajos_Trabajos> Cat_Destajos_Trabajos { get; set; }

    public virtual DbSet<Cat_Estatus> Cat_Estatus { get; set; }

    public virtual DbSet<Cat_Facturacion_Productos> Cat_Facturacion_Productos { get; set; }

    public virtual DbSet<Cat_Facturas_AutorizaMotivos> Cat_Facturas_AutorizaMotivos { get; set; }

    public virtual DbSet<Cat_Facturas_Subcategorias> Cat_Facturas_Subcategorias { get; set; }

    public virtual DbSet<Cat_Leyenda_Obras_Cerradas> Cat_Leyenda_Obras_Cerradas { get; set; }

    public virtual DbSet<Cat_Reembolsos_Conceptos> Cat_Reembolsos_Conceptos { get; set; }

    public virtual DbSet<Cat_Reembolsos_Tipo_Documento> Cat_Reembolsos_Tipo_Documento { get; set; }

    public virtual DbSet<Cat_Reembolsos_Tipo_Pago> Cat_Reembolsos_Tipo_Pago { get; set; }

    public virtual DbSet<Cat_Segmentos_Contables> Cat_Segmentos_Contables { get; set; }

    public virtual DbSet<Cat_Tipo_Factura> Cat_Tipo_Factura { get; set; }

    public virtual DbSet<Cat_Tipo_Obras> Cat_Tipo_Obras { get; set; }

    public virtual DbSet<Cat_Tipos_Segmentos> Cat_Tipos_Segmentos { get; set; }

    public virtual DbSet<Cat_Tipos_Servicios_Obras_Terminadas> Cat_Tipos_Servicios_Obras_Terminadas { get; set; }

    public virtual DbSet<Cat_UnidadMedida> Cat_UnidadMedida { get; set; }

    public virtual DbSet<Cat_UnidadPresentacion> Cat_UnidadPresentacion { get; set; }

    public virtual DbSet<Cat_UnidadPresentacion_Arbol> Cat_UnidadPresentacion_Arbol { get; set; }

    public virtual DbSet<Ciudades> Ciudades { get; set; }

    public virtual DbSet<ComentariosPortalProveedores> ComentariosPortalProveedores { get; set; }

    public virtual DbSet<CorreoAres> CorreoAres { get; set; }

    public virtual DbSet<Destajos> Destajos { get; set; }

    public virtual DbSet<Destajos_Archivos> Destajos_Archivos { get; set; }

    public virtual DbSet<Destajos_Solicitudes> Destajos_Solicitudes { get; set; }

    public virtual DbSet<Detalles_Segmentos_Contables_Ciudades> Detalles_Segmentos_Contables_Ciudades { get; set; }

    public virtual DbSet<Detalles_Segmentos_Contables_Estados> Detalles_Segmentos_Contables_Estados { get; set; }

    public virtual DbSet<ET> ET { get; set; }

    public virtual DbSet<Empleados> Empleados { get; set; }

    public virtual DbSet<Empleados_Destajos> Empleados_Destajos { get; set; }

    public virtual DbSet<Empleados_DobleRol> Empleados_DobleRol { get; set; }

    public virtual DbSet<Empleados_Obras> Empleados_Obras { get; set; }

    public virtual DbSet<Equipo> Equipo { get; set; }

    public virtual DbSet<Estados> Estados { get; set; }

    public virtual DbSet<ListadoMantenimiento> ListadoMantenimiento { get; set; }

    public virtual DbSet<M_Combustible> M_Combustible { get; set; }

    public virtual DbSet<M_Ingresos> M_Ingresos { get; set; }

    public virtual DbSet<M_Mantenimiento> M_Mantenimiento { get; set; }

    public virtual DbSet<M_Personal> M_Personal { get; set; }

    public virtual DbSet<Maquinaria> Maquinaria { get; set; }

    public virtual DbSet<Maquinaria_Combustible> Maquinaria_Combustible { get; set; }

    public virtual DbSet<Maquinaria_Mantenimiento> Maquinaria_Mantenimiento { get; set; }

    public virtual DbSet<Maquinaria_MantoPreventivo> Maquinaria_MantoPreventivo { get; set; }

    public virtual DbSet<Maquinaria_Odometros> Maquinaria_Odometros { get; set; }

    public virtual DbSet<Maquinaria_Personal> Maquinaria_Personal { get; set; }

    public virtual DbSet<Maquinaria_Trabajo> Maquinaria_Trabajo { get; set; }

    public virtual DbSet<Obras> Obras { get; set; }

    public virtual DbSet<OrdenCompra> OrdenCompra { get; set; }

    public virtual DbSet<OrdenCompraDetalle> OrdenCompraDetalle { get; set; }

    public virtual DbSet<Parametros> Parametros { get; set; }

    public virtual DbSet<Permisos> Permisos { get; set; }

    public virtual DbSet<Plazas> Plazas { get; set; }

    public virtual DbSet<Productos> Productos { get; set; }

    public virtual DbSet<Productos_Existencias> Productos_Existencias { get; set; }

    public virtual DbSet<ProvFac> ProvFac { get; set; }

    public virtual DbSet<Proveedores> Proveedores { get; set; }

    public virtual DbSet<Proveedores_facturas> Proveedores_facturas { get; set; }

    public virtual DbSet<Proveedores_facturas_notascredito> Proveedores_facturas_notascredito { get; set; }

    public virtual DbSet<Proveedores_facturas_precompra_detalle> Proveedores_facturas_precompra_detalle { get; set; }

    public virtual DbSet<Proveedores_sucursales> Proveedores_sucursales { get; set; }

    public virtual DbSet<Reembolsos_Archivos> Reembolsos_Archivos { get; set; }

    public virtual DbSet<Reembolsos_Solicitudes> Reembolsos_Solicitudes { get; set; }

    public virtual DbSet<Rel_Destajos_TiposTrabajo_CategoriaObra> Rel_Destajos_TiposTrabajo_CategoriaObra { get; set; }

    public virtual DbSet<Rel_gastos_generales_trabajo> Rel_gastos_generales_trabajo { get; set; }

    public virtual DbSet<Rol_Empleados_Destajos> Rol_Empleados_Destajos { get; set; }

    public virtual DbSet<Sucursales> Sucursales { get; set; }

    public virtual DbSet<Sucursales_Almacenes> Sucursales_Almacenes { get; set; }

    public virtual DbSet<Sucursales_Usuarios> Sucursales_Usuarios { get; set; }

    public virtual DbSet<Tablas> Tablas { get; set; }

    public virtual DbSet<Tablas_Descripciones> Tablas_Descripciones { get; set; }

    public virtual DbSet<Usuarios> Usuarios { get; set; }

    public virtual DbSet<Usuarios_Permisos> Usuarios_Permisos { get; set; }

    public virtual DbSet<Vehiculos> Vehiculos { get; set; }

    public virtual DbSet<vCorreo_Res> vCorreo_Res { get; set; }

    public virtual DbSet<vDestajosRelVistaExcelGastos> vDestajosRelVistaExcelGastos { get; set; }

    public virtual DbSet<vDestajosRelVistaeExcelGastos> vDestajosRelVistaeExcelGastos { get; set; }

    public virtual DbSet<vDestajosRelVistaeExcelResidentes> vDestajosRelVistaeExcelResidentes { get; set; }

    public virtual DbSet<vDestajosRelVistaeExcelSupervision> vDestajosRelVistaeExcelSupervision { get; set; }

    public virtual DbSet<vDestajosSolicitudes> vDestajosSolicitudes { get; set; }

    public virtual DbSet<vSaldoComprasFacturas> vSaldoComprasFacturas { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.HasDefaultSchema("db_owner");

        modelBuilder.Entity<Almacenes>(entity =>
        {
            entity.HasKey(e => e.IDAlmacen);

            entity.ToTable("Almacenes", "dbo");

            entity.Property(e => e.IDAlmacen).ValueGeneratedNever();
            entity.Property(e => e.Nombre).HasMaxLength(250);
        });

        modelBuilder.Entity<Almacenes_Existencias>(entity =>
        {
            entity.HasKey(e => new { e.IDAlmacen, e.IDEquipo, e.IDResponsable });

            entity.ToTable("Almacenes/Existencias", "dbo");

            entity.Property(e => e.IDAlmacen).HasMaxLength(50);
            entity.Property(e => e.IDEquipo).HasMaxLength(30);
            entity.Property(e => e.UltimoMovimiento).HasColumnType("datetime");
        });

        modelBuilder.Entity<Almacenes_Movimientos>(entity =>
        {
            entity.HasKey(e => e.IDMovimiento);

            entity.ToTable("Almacenes/Movimientos", "dbo");

            entity.Property(e => e.Fecha).HasColumnType("datetime");
            entity.Property(e => e.IDAlmacen)
                .IsRequired()
                .HasMaxLength(50);
            entity.Property(e => e.IDAlmacenDestino).HasMaxLength(50);
            entity.Property(e => e.Referencia).HasMaxLength(50);
            entity.Property(e => e.Status).HasMaxLength(50);
            entity.Property(e => e.Tipo)
                .IsRequired()
                .HasMaxLength(1);
            entity.Property(e => e.TipoDocumento)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<Almacenes_Movimientos_Partidas>(entity =>
        {
            entity.HasKey(e => new { e.IDMovimiento, e.IDPartida });

            entity.ToTable("Almacenes/Movimientos/Partidas", "dbo");

            entity.Property(e => e.IDEquipo).HasMaxLength(30);

            entity.HasOne(d => d.IDMovimientoNavigation).WithMany(p => p.Almacenes_Movimientos_Partidas)
                .HasForeignKey(d => d.IDMovimiento)
                .HasConstraintName("FK_Almacenes/Movimientos/Partidas_Almacenes/Movimientos");
        });

        modelBuilder.Entity<Almacenes_TiposMovimientos>(entity =>
        {
            entity.HasKey(e => new { e.IDTipo, e.IDSubtipo });

            entity.ToTable("Almacenes/TiposMovimientos", "dbo");

            entity.Property(e => e.IDTipo).HasMaxLength(1);
            entity.Property(e => e.Nombre)
                .IsRequired()
                .HasMaxLength(100);
        });

        modelBuilder.Entity<Cat_Categoria_Obra>(entity =>
        {
            entity.HasKey(e => e.IDCategoria).HasName("PK__Cat_Clas__28ABDECE0934551F");

            entity.ToTable("Cat_Categoria_Obra", "dbo");

            entity.Property(e => e.Habilitado).HasDefaultValue(true);
            entity.Property(e => e.IDTipoObra).HasDefaultValue(1);
            entity.Property(e => e.Nombre)
                .IsRequired()
                .HasMaxLength(250)
                .IsUnicode(false);
        });

        modelBuilder.Entity<Cat_Destajos_Cuenta>(entity =>
        {
            entity.HasKey(e => e.IDcuenta);

            entity.ToTable("Cat_Destajos_Cuenta", "dbo");

            entity.Property(e => e.Habilitado).HasDefaultValue(true);
            entity.Property(e => e.Nombre)
                .IsRequired()
                .HasMaxLength(50);
        });

        modelBuilder.Entity<Cat_Destajos_Relacion_Gastos_Trabajos>(entity =>
        {
            entity.ToTable("Cat_Destajos_Relacion_Gastos_Trabajos", "dbo");

            entity.Property(e => e.Habilitado).HasDefaultValue(1);
        });

        modelBuilder.Entity<Cat_Destajos_Tipos>(entity =>
        {
            entity.HasKey(e => e.idregistro);

            entity.ToTable("Cat_Destajos_Tipos", "dbo");

            entity.Property(e => e.Activo).HasDefaultValue(true);
            entity.Property(e => e.nombre_full)
                .HasMaxLength(250)
                .IsUnicode(false);
            entity.Property(e => e.nombre_short)
                .HasMaxLength(250)
                .IsUnicode(false);
        });

        modelBuilder.Entity<Cat_Destajos_Tipos_Gastos>(entity =>
        {
            entity.HasKey(e => e.IDTipoGasto).HasName("PK__Cat_Dest__63CAEA1F7A21BBD8");

            entity.ToTable("Cat_Destajos_Tipos_Gastos", "dbo");

            entity.Property(e => e.Nombre)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false);
        });

        modelBuilder.Entity<Cat_Destajos_Tipos_Trabajo>(entity =>
        {
            entity.HasKey(e => e.IDTipoTrabajo).HasName("PK__Cat_Dest__F3FEA75045064878");

            entity.ToTable("Cat_Destajos_Tipos_Trabajo", "dbo");

            entity.Property(e => e.Nombre)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false);
        });

        modelBuilder.Entity<Cat_Destajos_Trabajos>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("Cat_Destajos_Trabajos", "dbo");

            entity.Property(e => e.activo).HasDefaultValue(true);
            entity.Property(e => e.categoria)
                .HasMaxLength(250)
                .IsUnicode(false);
            entity.Property(e => e.idregistro).ValueGeneratedOnAdd();
            entity.Property(e => e.trabajo)
                .HasMaxLength(250)
                .IsUnicode(false);
        });

        modelBuilder.Entity<Cat_Estatus>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("Cat_Estatus", "dbo");

            entity.Property(e => e.estatus)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.idregistro).ValueGeneratedOnAdd();
            entity.Property(e => e.tabla)
                .HasMaxLength(50)
                .IsUnicode(false);
        });

        modelBuilder.Entity<Cat_Facturacion_Productos>(entity =>
        {
            entity.HasKey(e => e.IDProducto).HasName("PK__Cat_Fact__ABDAF2B42B1210CC");

            entity.ToTable("Cat_Facturacion_Productos", "dbo");

            entity.Property(e => e.Nombre)
                .IsRequired()
                .HasMaxLength(250)
                .IsUnicode(false);
            entity.Property(e => e.Visible).HasDefaultValue(true);
        });

        modelBuilder.Entity<Cat_Facturas_AutorizaMotivos>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("Cat_Facturas_AutorizaMotivos", "dbo");

            entity.Property(e => e.activo).HasDefaultValue(true);
            entity.Property(e => e.cuerpo)
                .HasMaxLength(500)
                .IsUnicode(false);
            entity.Property(e => e.fechaalta)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.idregistro).ValueGeneratedOnAdd();
            entity.Property(e => e.titulo)
                .HasMaxLength(250)
                .IsUnicode(false);
        });

        modelBuilder.Entity<Cat_Facturas_Subcategorias>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("Cat_Facturas_Subcategorias", "dbo");

            entity.Property(e => e.activo).HasDefaultValue(true);
            entity.Property(e => e.idregistro).ValueGeneratedOnAdd();
            entity.Property(e => e.subcategoria)
                .HasMaxLength(250)
                .IsUnicode(false);
        });

        modelBuilder.Entity<Cat_Leyenda_Obras_Cerradas>(entity =>
        {
            entity.HasKey(e => e.IDLeyenda).HasName("PK__Cat_Leya__0706A51A2E5808BE");

            entity.ToTable("Cat_Leyenda_Obras_Cerradas", "dbo");

            entity.Property(e => e.Descripcion)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false);
        });

        modelBuilder.Entity<Cat_Reembolsos_Conceptos>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("Cat_Reembolsos_Conceptos", "dbo");

            entity.Property(e => e.activo).HasDefaultValue(true);
            entity.Property(e => e.categoria)
                .HasMaxLength(250)
                .IsUnicode(false);
            entity.Property(e => e.concepto)
                .HasMaxLength(250)
                .IsUnicode(false);
            entity.Property(e => e.idregistro).ValueGeneratedOnAdd();
        });

        modelBuilder.Entity<Cat_Reembolsos_Tipo_Documento>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("Cat_Reembolsos_Tipo_Documento", "dbo");

            entity.Property(e => e.abreviatura)
                .HasMaxLength(10)
                .IsUnicode(false);
            entity.Property(e => e.activo).HasDefaultValue(true);
            entity.Property(e => e.nombre)
                .HasMaxLength(50)
                .IsUnicode(false);
        });

        modelBuilder.Entity<Cat_Reembolsos_Tipo_Pago>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("Cat_Reembolsos_Tipo_Pago", "dbo");

            entity.Property(e => e.activo).HasDefaultValue(true);
            entity.Property(e => e.nombre)
                .HasMaxLength(50)
                .IsUnicode(false);
        });

        modelBuilder.Entity<Cat_Segmentos_Contables>(entity =>
        {
            entity.HasKey(e => e.IDSegmento).HasName("PK__Cat_Segm__EE28D750B36F8679");

            entity.ToTable("Cat_Segmentos_Contables", "dbo");

            entity.Property(e => e.Valor)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false);

            entity.HasOne(d => d.IDTipoSegmentoNavigation).WithMany(p => p.Cat_Segmentos_Contables)
                .HasForeignKey(d => d.IDTipoSegmento)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Cat_Segme__IDTip__7C3A67EB");
        });

        modelBuilder.Entity<Cat_Tipo_Factura>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("Cat_Tipo_Factura", "dbo");

            entity.Property(e => e.nombre)
                .HasMaxLength(50)
                .IsUnicode(false);
        });

        modelBuilder.Entity<Cat_Tipo_Obras>(entity =>
        {
            entity.HasKey(e => e.IDTipoObra);

            entity.ToTable("Cat_Tipo_Obras", "dbo");

            entity.Property(e => e.Nombre)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false);
        });

        modelBuilder.Entity<Cat_Tipos_Segmentos>(entity =>
        {
            entity.HasKey(e => e.IDTipo).HasName("PK__Cat_Tipo__BEB088A636E5CAA7");

            entity.ToTable("Cat_Tipos_Segmentos", "dbo");

            entity.Property(e => e.Nombre)
                .IsRequired()
                .HasMaxLength(25)
                .IsUnicode(false);
        });

        modelBuilder.Entity<Cat_Tipos_Servicios_Obras_Terminadas>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("Cat_Tipos_Servicios_Obras_Terminadas", "dbo");

            entity.Property(e => e.IDTipoServicio).ValueGeneratedOnAdd();
            entity.Property(e => e.Nombre)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false);
        });

        modelBuilder.Entity<Cat_UnidadMedida>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("Cat_UnidadMedida", "dbo");

            entity.Property(e => e.idactivo).HasDefaultValue(true);
            entity.Property(e => e.idregistro).ValueGeneratedOnAdd();
            entity.Property(e => e.nombre)
                .HasMaxLength(250)
                .IsUnicode(false);
        });

        modelBuilder.Entity<Cat_UnidadPresentacion>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("Cat_UnidadPresentacion", "dbo");

            entity.Property(e => e.cantidadxunidad).HasColumnType("decimal(18, 2)");
            entity.Property(e => e.idactivo).HasDefaultValue(true);
            entity.Property(e => e.idregistro).ValueGeneratedOnAdd();
            entity.Property(e => e.nombre)
                .HasMaxLength(250)
                .IsUnicode(false);
            entity.Property(e => e.peso).HasColumnType("decimal(18, 2)");
        });

        modelBuilder.Entity<Cat_UnidadPresentacion_Arbol>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("Cat_UnidadPresentacion_Arbol", "dbo");

            entity.Property(e => e.idregistro).ValueGeneratedOnAdd();
        });

        modelBuilder.Entity<Ciudades>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("Ciudades", "dbo");

            entity.Property(e => e.Nombre)
                .IsRequired()
                .HasMaxLength(100);
        });

        modelBuilder.Entity<ComentariosPortalProveedores>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("ComentariosPortalProveedores", "dbo");

            entity.Property(e => e.comentario)
                .HasMaxLength(5000)
                .IsUnicode(false);
            entity.Property(e => e.correo)
                .HasMaxLength(250)
                .IsUnicode(false);
            entity.Property(e => e.fechaalta).HasColumnType("datetime");
            entity.Property(e => e.idregistro).ValueGeneratedOnAdd();
            entity.Property(e => e.nombre)
                .HasMaxLength(500)
                .IsUnicode(false);
        });

        modelBuilder.Entity<CorreoAres>(entity =>
        {
            entity.ToTable("CorreoAres", "dbo");

            entity.Property(e => e.Email).HasMaxLength(500);
            entity.Property(e => e.Numero)
                .IsRequired()
                .HasMaxLength(50);
            entity.Property(e => e.Proveedor)
                .IsRequired()
                .HasMaxLength(250)
                .IsUnicode(false);
            entity.Property(e => e.aliasRes)
                .IsRequired()
                .HasMaxLength(250)
                .IsUnicode(false);
            entity.Property(e => e.contrarecibo)
                .IsRequired()
                .HasMaxLength(10);
        });

        modelBuilder.Entity<Destajos>(entity =>
        {
            entity.ToTable("Destajos", "dbo");

            entity.Property(e => e.FechaAlta)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.Folio)
                .IsRequired()
                .HasMaxLength(50);
            entity.Property(e => e.Hablitado).HasDefaultValue(1);

            entity.HasOne(d => d.IdResidenteNavigation).WithMany(p => p.Destajos)
                .HasForeignKey(d => d.IdResidente)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Destajos_Empleados");
        });

        modelBuilder.Entity<Destajos_Archivos>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("Destajos/Archivos", "dbo");

            entity.Property(e => e.IDArchivo).ValueGeneratedOnAdd();
            entity.Property(e => e.NombreArchivo)
                .IsRequired()
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.activo).HasDefaultValue(true);
            entity.Property(e => e.fechaalta)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.fechaeliminado).HasColumnType("datetime");
        });

        modelBuilder.Entity<Destajos_Solicitudes>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("Destajos/Solicitudes", "dbo");

            entity.Property(e => e.FechaAlta)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.FechaCancelado).HasColumnType("datetime");
            entity.Property(e => e.FechaModificacion).HasColumnType("datetime");
            entity.Property(e => e.FechaPagado).HasColumnType("datetime");
            entity.Property(e => e.FechaRevision).HasColumnType("datetime");
            entity.Property(e => e.Folio)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.IDDestajo).ValueGeneratedOnAdd();
            entity.Property(e => e.IDEstatus).HasDefaultValue(1);
            entity.Property(e => e.IDObra).HasDefaultValue(-1);
            entity.Property(e => e.MontoEntregado).HasColumnType("money");
            entity.Property(e => e.MontoSolicitado).HasColumnType("money");
            entity.Property(e => e.ObservacionesAlta).HasMaxLength(2500);
            entity.Property(e => e.ObservacionesRevision).HasMaxLength(2500);
            entity.Property(e => e.OtroConcepto).HasMaxLength(2500);
            entity.Property(e => e.Pagada).HasDefaultValue(false);
        });

        modelBuilder.Entity<Detalles_Segmentos_Contables_Ciudades>(entity =>
        {
            entity.HasKey(e => e.ID).HasName("PK__Detalles__3214EC2719A64A39");

            entity.ToTable("Detalles_Segmentos_Contables_Ciudades", "dbo");

            entity.HasOne(d => d.IDSegmentoNavigation).WithMany(p => p.Detalles_Segmentos_Contables_Ciudades)
                .HasForeignKey(d => d.IDSegmento)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Detalles___IDSeg__7F16D496");
        });

        modelBuilder.Entity<Detalles_Segmentos_Contables_Estados>(entity =>
        {
            entity.HasKey(e => e.ID).HasName("PK__Detalles__3214EC278AC31A6E");

            entity.ToTable("Detalles_Segmentos_Contables_Estados", "dbo");

            entity.HasOne(d => d.IDSegmentoNavigation).WithMany(p => p.Detalles_Segmentos_Contables_Estados)
                .HasForeignKey(d => d.IDSegmento)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Detalles___IDSeg__01F34141");
        });

        modelBuilder.Entity<ET>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("ET", "dbo");

            entity.Property(e => e.IDEquipo)
                .IsRequired()
                .HasMaxLength(30);
            entity.Property(e => e.Subtipo).HasMaxLength(250);
            entity.Property(e => e.Tipo).HasMaxLength(250);
        });

        modelBuilder.Entity<Empleados>(entity =>
        {
            entity.HasKey(e => e.IDEmpleado);

            entity.ToTable("Empleados", "dbo");

            entity.Property(e => e.IDEmpleado).ValueGeneratedNever();
            entity.Property(e => e.ApellidoMaterno).HasMaxLength(50);
            entity.Property(e => e.ApellidoPaterno).HasMaxLength(50);
            entity.Property(e => e.CURP).HasMaxLength(18);
            entity.Property(e => e.Celular).HasMaxLength(10);
            entity.Property(e => e.ContactoEmergencia).HasMaxLength(250);
            entity.Property(e => e.Email).HasMaxLength(500);
            entity.Property(e => e.EsCoordinador).HasDefaultValue(0);
            entity.Property(e => e.FechaAlta).HasColumnType("datetime");
            entity.Property(e => e.FolioAbreviatura)
                .HasMaxLength(10)
                .IsUnicode(false);
            entity.Property(e => e.Fotografia).HasMaxLength(250);
            entity.Property(e => e.Habilitado).HasDefaultValue(true);
            entity.Property(e => e.NSS).HasMaxLength(11);
            entity.Property(e => e.Nombre).HasMaxLength(50);
            entity.Property(e => e.TipoSangre).HasMaxLength(5);
            entity.Property(e => e.UltimoAcceso).HasColumnType("datetime");
            entity.Property(e => e.accesoportal).HasDefaultValue(false);
            entity.Property(e => e.busqueda).HasDefaultValue(0);
            entity.Property(e => e.categoria_factura)
                .HasMaxLength(10)
                .IsUnicode(false);
            entity.Property(e => e.filtroprog).HasDefaultValue(0);
            entity.Property(e => e.filtroreembolso).HasDefaultValue(0);
            entity.Property(e => e.password)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.residente_alias)
                .HasMaxLength(250)
                .IsUnicode(false);
            entity.Property(e => e.usuario)
                .HasMaxLength(50)
                .IsUnicode(false);
        });

        modelBuilder.Entity<Empleados_Destajos>(entity =>
        {
            entity.HasKey(e => e.ID).HasName("PK__Emplados__3214EC27CB6098D7");

            entity.ToTable("Empleados_Destajos", "dbo");
        });

        modelBuilder.Entity<Empleados_DobleRol>(entity =>
        {
            entity.ToTable("Empleados/DobleRol", "dbo");

            entity.Property(e => e.Activo).HasDefaultValue(true);

            entity.HasOne(d => d.IDEmpleadoNavigation).WithMany(p => p.Empleados_DobleRol)
                .HasForeignKey(d => d.IDEmpleado)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("fk_Empleado");
        });

        modelBuilder.Entity<Empleados_Obras>(entity =>
        {
            entity.HasKey(e => e.ID).HasName("PK_Person");

            entity.ToTable("Empleados/Obras", "dbo");

            entity.Property(e => e.Activo).HasDefaultValue(true);
        });

        modelBuilder.Entity<Equipo>(entity =>
        {
            entity.HasKey(e => e.IDEquipo);

            entity.ToTable("Equipo", "dbo");

            entity.Property(e => e.IDEquipo).HasMaxLength(30);
            entity.Property(e => e.ArchivoFactura).HasMaxLength(250);
            entity.Property(e => e.ArchivoFotografia).HasMaxLength(250);
            entity.Property(e => e.ArchivoFotografia2).HasMaxLength(250);
            entity.Property(e => e.ArchivoGarantia).HasMaxLength(250);
            entity.Property(e => e.Costo).HasColumnType("money");
            entity.Property(e => e.Descripcion).HasMaxLength(250);
            entity.Property(e => e.Factura).HasMaxLength(50);
            entity.Property(e => e.FechaAlta).HasColumnType("datetime");
            entity.Property(e => e.FechaModificacion).HasColumnType("datetime");
            entity.Property(e => e.Nombre).HasMaxLength(150);
            entity.Property(e => e.PolizaGarantia).HasMaxLength(50);
            entity.Property(e => e.Status)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<Estados>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("Estados", "dbo");

            entity.Property(e => e.Nombre)
                .IsRequired()
                .HasMaxLength(100);
        });

        modelBuilder.Entity<ListadoMantenimiento>(entity =>
        {
            entity.HasKey(e => e.IDMantenimiento);

            entity.ToTable("ListadoMantenimiento", "dbo");

            entity.Property(e => e.IDMantenimiento).ValueGeneratedNever();
            entity.Property(e => e.Actividad).HasMaxLength(250);
            entity.Property(e => e.Periodicidad).HasMaxLength(250);
            entity.Property(e => e.TipoEquipo)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.TipoMantenimiento)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<M_Combustible>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("M_Combustible", "dbo");

            entity.Property(e => e.Folio).HasMaxLength(50);
            entity.Property(e => e.IDMaquinaria).HasMaxLength(50);
            entity.Property(e => e.Litros).HasColumnType("money");
            entity.Property(e => e.Operador).HasMaxLength(152);
            entity.Property(e => e.PrecioUnitario).HasColumnType("money");
            entity.Property(e => e.TipoConcepto)
                .IsRequired()
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.Total).HasColumnType("money");
        });

        modelBuilder.Entity<M_Ingresos>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("M_Ingresos", "dbo");

            entity.Property(e => e.Costo).HasColumnType("money");
            entity.Property(e => e.Horas_Viajes)
                .HasColumnType("money")
                .HasColumnName("Horas/Viajes");
            entity.Property(e => e.IDMaquinaria).HasMaxLength(50);
            entity.Property(e => e.Obra).HasMaxLength(250);
            entity.Property(e => e.Operador).HasMaxLength(152);
            entity.Property(e => e.Residente).HasMaxLength(152);
            entity.Property(e => e.TipoConcepto)
                .IsRequired()
                .HasMaxLength(7)
                .IsUnicode(false);
        });

        modelBuilder.Entity<M_Mantenimiento>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("M_Mantenimiento", "dbo");

            entity.Property(e => e.Concepto).HasMaxLength(500);
            entity.Property(e => e.IDMaquinaria).HasMaxLength(50);
            entity.Property(e => e.Iva).HasColumnType("numeric(28, 10)");
            entity.Property(e => e.Subtotal).HasColumnType("numeric(25, 8)");
            entity.Property(e => e.Taller).HasMaxLength(50);
            entity.Property(e => e.TipoConcepto)
                .IsRequired()
                .HasMaxLength(23)
                .IsUnicode(false);
            entity.Property(e => e.Total).HasColumnType("money");
        });

        modelBuilder.Entity<M_Personal>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("M_Personal", "dbo");

            entity.Property(e => e.Concepto).HasMaxLength(250);
            entity.Property(e => e.Empleado).HasMaxLength(153);
            entity.Property(e => e.HorasExtras).HasColumnType("money");
            entity.Property(e => e.IDMaquinaria).HasMaxLength(50);
            entity.Property(e => e.Prestaciones).HasColumnType("money");
            entity.Property(e => e.Sueldo).HasColumnType("money");
            entity.Property(e => e.TipoConcepto)
                .IsRequired()
                .HasMaxLength(17)
                .IsUnicode(false);
            entity.Property(e => e.Viaticos).HasColumnType("money");
        });

        modelBuilder.Entity<Maquinaria>(entity =>
        {
            entity.HasKey(e => e.IDMaquinaria);

            entity.ToTable("Maquinaria", "dbo");

            entity.Property(e => e.IDMaquinaria).HasMaxLength(25);
            entity.Property(e => e.ArchivoFactura).HasMaxLength(500);
            entity.Property(e => e.ArchivoFotografia).HasMaxLength(250);
            entity.Property(e => e.Costo).HasColumnType("money");
            entity.Property(e => e.Factura).HasMaxLength(50);
            entity.Property(e => e.FechaAlta).HasColumnType("datetime");
            entity.Property(e => e.FechaModificacion).HasColumnType("datetime");
            entity.Property(e => e.Fotografia).HasMaxLength(250);
            entity.Property(e => e.Marca).HasMaxLength(100);
            entity.Property(e => e.Modelo).HasMaxLength(10);
            entity.Property(e => e.Moneda)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.NoSerie).HasMaxLength(50);
            entity.Property(e => e.Nombre).HasMaxLength(250);
            entity.Property(e => e.Placas).HasMaxLength(10);
            entity.Property(e => e.PolizaSeguro).HasMaxLength(50);
            entity.Property(e => e.ProximoMantenimiento).HasColumnType("datetime");
            entity.Property(e => e.Tipo)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.TipoCambio).HasColumnType("money");
        });

        modelBuilder.Entity<Maquinaria_Combustible>(entity =>
        {
            entity.HasKey(e => e.IDRegistro);

            entity.ToTable("Maquinaria/Combustible", "dbo");

            entity.Property(e => e.IDRegistro).ValueGeneratedNever();
            entity.Property(e => e.Folio).HasMaxLength(50);
            entity.Property(e => e.Gasolinera).HasMaxLength(250);
            entity.Property(e => e.IDMaquinaria).HasMaxLength(50);
            entity.Property(e => e.Litros).HasColumnType("money");
            entity.Property(e => e.PrecioUnitario).HasColumnType("money");
            entity.Property(e => e.Tipo)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.Total).HasColumnType("money");
        });

        modelBuilder.Entity<Maquinaria_Mantenimiento>(entity =>
        {
            entity.HasKey(e => e.IDRegistro);

            entity.ToTable("Maquinaria/Mantenimiento", "dbo");

            entity.Property(e => e.IDRegistro).ValueGeneratedNever();
            entity.Property(e => e.Concepto).HasMaxLength(500);
            entity.Property(e => e.IDMaquinaria).HasMaxLength(50);
            entity.Property(e => e.Moneda)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.Odometro).HasMaxLength(50);
            entity.Property(e => e.TipoCambio).HasColumnType("money");
            entity.Property(e => e.Total).HasColumnType("money");
        });

        modelBuilder.Entity<Maquinaria_MantoPreventivo>(entity =>
        {
            entity.HasKey(e => e.IDRegistro);

            entity.ToTable("Maquinaria/MantoPreventivo", "dbo");

            entity.Property(e => e.IDRegistro).ValueGeneratedNever();
            entity.Property(e => e.Actual).HasMaxLength(50);
            entity.Property(e => e.FechaAutorizacion).HasColumnType("datetime");
            entity.Property(e => e.IDMaquinaria).HasMaxLength(50);
            entity.Property(e => e.Realizado).HasMaxLength(50);
            entity.Property(e => e.TipoEquipo)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.Ultimo).HasMaxLength(50);
        });

        modelBuilder.Entity<Maquinaria_Odometros>(entity =>
        {
            entity.HasKey(e => e.IDRegistro);

            entity.ToTable("Maquinaria/Odometros", "dbo");

            entity.Property(e => e.IDRegistro).ValueGeneratedNever();
            entity.Property(e => e.IDMaquinaria).HasMaxLength(50);
            entity.Property(e => e.LecturaActual).HasMaxLength(50);
            entity.Property(e => e.LecturaAnterior).HasMaxLength(50);
        });

        modelBuilder.Entity<Maquinaria_Personal>(entity =>
        {
            entity.HasKey(e => e.IDRegistro);

            entity.ToTable("Maquinaria/Personal", "dbo");

            entity.Property(e => e.IDRegistro).ValueGeneratedNever();
            entity.Property(e => e.Concepto).HasMaxLength(250);
            entity.Property(e => e.HorasExtras).HasColumnType("money");
            entity.Property(e => e.IDMaquinaria).HasMaxLength(50);
            entity.Property(e => e.Ingreso).HasColumnType("money");
            entity.Property(e => e.Prestaciones).HasColumnType("money");
            entity.Property(e => e.Sueldo).HasColumnType("money");
            entity.Property(e => e.Viaticos).HasColumnType("money");
        });

        modelBuilder.Entity<Maquinaria_Trabajo>(entity =>
        {
            entity.HasKey(e => e.IDRegistro);

            entity.ToTable("Maquinaria/Trabajo", "dbo");

            entity.Property(e => e.IDRegistro).ValueGeneratedNever();
            entity.Property(e => e.Cantidad).HasColumnType("money");
            entity.Property(e => e.Costo).HasColumnType("money");
            entity.Property(e => e.IDMaquinaria).HasMaxLength(50);
            entity.Property(e => e.Tipo)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<Obras>(entity =>
        {
            entity.HasKey(e => e.IDObra);

            entity.ToTable("Obras", "dbo");

            entity.Property(e => e.IDObra).ValueGeneratedNever();
            entity.Property(e => e.Calle).HasMaxLength(150);
            entity.Property(e => e.Colonia).HasMaxLength(250);
            entity.Property(e => e.Completada).HasDefaultValue(false);
            entity.Property(e => e.EsProyectoObra).HasDefaultValue(true);
            entity.Property(e => e.FechaFin).HasColumnType("datetime");
            entity.Property(e => e.FechaInicio).HasColumnType("datetime");
            entity.Property(e => e.NoExterior).HasMaxLength(50);
            entity.Property(e => e.NoInterior).HasMaxLength(50);
            entity.Property(e => e.Nombre).HasMaxLength(250);
        });

        modelBuilder.Entity<OrdenCompra>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("OrdenCompra", "dbo", tb => tb.HasTrigger("TG_SetEntregarObra_OC"));

            entity.Property(e => e.fechaalta).HasColumnType("datetime");
            entity.Property(e => e.idactivo).HasDefaultValue(true);
            entity.Property(e => e.idregistro).ValueGeneratedOnAdd();
            entity.Property(e => e.observaciones).HasMaxLength(2500);
        });

        modelBuilder.Entity<OrdenCompraDetalle>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("OrdenCompraDetalle", "dbo");

            entity.Property(e => e.cantidad).HasColumnType("decimal(18, 2)");
            entity.Property(e => e.fechaalta).HasColumnType("datetime");
            entity.Property(e => e.idactivo).HasDefaultValue(true);
            entity.Property(e => e.idregistro).ValueGeneratedOnAdd();
            entity.Property(e => e.importe).HasColumnType("decimal(18, 2)");
            entity.Property(e => e.peso).HasColumnType("decimal(18, 2)");
            entity.Property(e => e.precio).HasColumnType("decimal(18, 2)");
        });

        modelBuilder.Entity<Parametros>(entity =>
        {
            entity.HasKey(e => e.IDParametro).HasName("PK__Parametr__2FB9810E824F9191");

            entity.ToTable("Parametros", "dbo");

            entity.Property(e => e.Descripcion)
                .IsRequired()
                .HasMaxLength(500)
                .IsUnicode(false);
            entity.Property(e => e.Parametro)
                .IsRequired()
                .HasMaxLength(50);
            entity.Property(e => e.Valor).IsRequired();
        });

        modelBuilder.Entity<Permisos>(entity =>
        {
            entity.HasKey(e => e.IDPermiso);

            entity.ToTable("Permisos", "dbo");

            entity.Property(e => e.IDPermiso).ValueGeneratedNever();
            entity.Property(e => e.Descripcion)
                .IsRequired()
                .HasMaxLength(100);
        });

        modelBuilder.Entity<Plazas>(entity =>
        {
            entity.HasKey(e => e.IDPlaza);

            entity.ToTable("Plazas", "dbo");

            entity.Property(e => e.IDPlaza).ValueGeneratedNever();
            entity.Property(e => e.Nombre).HasMaxLength(250);
        });

        modelBuilder.Entity<Productos>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("Productos", "dbo");

            entity.Property(e => e.fechaalta).HasColumnType("datetime");
            entity.Property(e => e.idactivo).HasDefaultValue(true);
            entity.Property(e => e.idregistro).ValueGeneratedOnAdd();
            entity.Property(e => e.nombre)
                .HasMaxLength(250)
                .IsUnicode(false);
        });

        modelBuilder.Entity<Productos_Existencias>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("Productos_Existencias", "dbo");

            entity.Property(e => e.cantidad).HasColumnType("decimal(18, 2)");
            entity.Property(e => e.idregistro).ValueGeneratedOnAdd();
        });

        modelBuilder.Entity<ProvFac>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("ProvFac", "dbo");

            entity.Property(e => e.Estado).HasMaxLength(50);
            entity.Property(e => e.Estatus)
                .HasMaxLength(2)
                .IsUnicode(false);
            entity.Property(e => e.FechaContrarecibo).HasColumnType("datetime");
            entity.Property(e => e.FechaFactura).HasColumnType("datetime");
            entity.Property(e => e.FechaRecepcion).HasColumnType("datetime");
            entity.Property(e => e.Monto).HasColumnType("money");
            entity.Property(e => e.Numero).HasMaxLength(50);
            entity.Property(e => e.Proveedor).HasMaxLength(1000);
            entity.Property(e => e.RFC).HasMaxLength(13);
            entity.Property(e => e.RecibidaEn)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.Saldo).HasColumnType("money");
            entity.Property(e => e.UUID).HasMaxLength(50);
        });

        modelBuilder.Entity<Proveedores>(entity =>
        {
            entity.HasKey(e => e.IDProveedor);

            entity.ToTable("Proveedores", "dbo");

            entity.Property(e => e.IDProveedor).ValueGeneratedNever();
            entity.Property(e => e.Contacto).HasMaxLength(300);
            entity.Property(e => e.Email).HasMaxLength(500);
            entity.Property(e => e.FacturasPUE03).HasDefaultValue(false);
            entity.Property(e => e.FechaAlta).HasColumnType("datetime");
            entity.Property(e => e.Nombre).HasMaxLength(1000);
            entity.Property(e => e.NombreComercial).HasMaxLength(1000);
            entity.Property(e => e.RFC).HasMaxLength(13);
            entity.Property(e => e.Telefono).HasMaxLength(300);
            entity.Property(e => e.TipoCredito)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.TipoPersona)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength();
        });

        modelBuilder.Entity<Proveedores_facturas>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("Proveedores_facturas", "dbo");

            entity.Property(e => e.Estatus)
                .HasMaxLength(2)
                .IsUnicode(false)
                .HasDefaultValueSql("((1))");
            entity.Property(e => e.EstatusComplemento).HasDefaultValue(0);
            entity.Property(e => e.FechaContrarecibo).HasColumnType("datetime");
            entity.Property(e => e.FechaFactura).HasColumnType("datetime");
            entity.Property(e => e.FechaPagada).HasColumnType("datetime");
            entity.Property(e => e.FechaPagadaAlta).HasColumnType("datetime");
            entity.Property(e => e.FechaParaRevision).HasColumnType("datetime");
            entity.Property(e => e.FechaRecepcion).HasColumnType("datetime");
            entity.Property(e => e.IDFactura).ValueGeneratedOnAdd();
            entity.Property(e => e.Monto).HasColumnType("money");
            entity.Property(e => e.Numero).HasMaxLength(50);
            entity.Property(e => e.RecibidaEn)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.Saldo).HasColumnType("money");
            entity.Property(e => e.UUID).HasMaxLength(50);
            entity.Property(e => e.eliminado_usuario_fecha).HasColumnType("datetime");
            entity.Property(e => e.fechaalta).HasColumnType("datetime");
            entity.Property(e => e.fechasuplantaautoriza).HasColumnType("datetime");
            entity.Property(e => e.idtipofactura).HasDefaultValue(1);
            entity.Property(e => e.residente_alias)
                .HasMaxLength(250)
                .IsUnicode(false);
        });

        modelBuilder.Entity<Proveedores_facturas_notascredito>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("Proveedores_facturas_notascredito", "dbo");

            entity.Property(e => e.Monto).HasColumnType("money");
            entity.Property(e => e.eliminado_usuario_fecha).HasColumnType("datetime");
            entity.Property(e => e.estatus)
                .HasMaxLength(2)
                .IsUnicode(false);
            entity.Property(e => e.fechaalta).HasColumnType("datetime");
            entity.Property(e => e.fechanotacredito).HasColumnType("datetime");
            entity.Property(e => e.fecharecepcion).HasColumnType("datetime");
            entity.Property(e => e.idregistro).ValueGeneratedOnAdd();
            entity.Property(e => e.numero)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.uuid)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.uuid_relacionado)
                .HasMaxLength(50)
                .IsUnicode(false);
        });

        modelBuilder.Entity<Proveedores_facturas_precompra_detalle>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("Proveedores_facturas_precompra_detalle", "dbo");

            entity.Property(e => e.antesimpuestos).HasColumnType("decimal(18, 2)");
            entity.Property(e => e.cantidad).HasColumnType("decimal(18, 2)");
            entity.Property(e => e.cantidadrestante).HasColumnType("decimal(18, 2)");
            entity.Property(e => e.fechaalta).HasColumnType("datetime");
            entity.Property(e => e.idactivo).HasDefaultValue(true);
            entity.Property(e => e.idregistro).ValueGeneratedOnAdd();
            entity.Property(e => e.iva).HasColumnType("decimal(18, 2)");
            entity.Property(e => e.ivamonto).HasColumnType("decimal(18, 2)");
            entity.Property(e => e.precio).HasColumnType("decimal(18, 2)");
            entity.Property(e => e.subtotal).HasColumnType("decimal(18, 2)");
        });

        modelBuilder.Entity<Proveedores_sucursales>(entity =>
        {
            entity.HasNoKey();

            entity.Property(e => e.Contraseña)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.Email)
                .HasMaxLength(500)
                .IsUnicode(false);
            entity.Property(e => e.IDSucursal).ValueGeneratedOnAdd();
            entity.Property(e => e.Nombre)
                .HasMaxLength(150)
                .IsUnicode(false);
            entity.Property(e => e.Usuario)
                .HasMaxLength(50)
                .IsUnicode(false);
        });

        modelBuilder.Entity<Reembolsos_Archivos>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("Reembolsos/Archivos", "dbo");

            entity.Property(e => e.FileExt)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.IDArchivo).ValueGeneratedOnAdd();
            entity.Property(e => e.NombreArchivo)
                .IsRequired()
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.activo).HasDefaultValue(true);
            entity.Property(e => e.fechaalta)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.fechaeliminado).HasColumnType("datetime");
        });

        modelBuilder.Entity<Reembolsos_Solicitudes>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("Reembolsos/Solicitudes", "dbo");

            entity.Property(e => e.FechaAlta)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.FechaCancelado).HasColumnType("datetime");
            entity.Property(e => e.FechaFactura).HasColumnType("datetime");
            entity.Property(e => e.FechaModificacion).HasColumnType("datetime");
            entity.Property(e => e.FechaPagado).HasColumnType("datetime");
            entity.Property(e => e.FechaRevision).HasColumnType("datetime");
            entity.Property(e => e.Folio)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.IDEstatus).HasDefaultValue(1);
            entity.Property(e => e.IDRefund).ValueGeneratedOnAdd();
            entity.Property(e => e.Monto).HasColumnType("money");
            entity.Property(e => e.Numero)
                .HasMaxLength(250)
                .IsUnicode(false);
            entity.Property(e => e.ObservacionesAlta).HasMaxLength(2500);
            entity.Property(e => e.ObservacionesRevision).HasMaxLength(2500);
            entity.Property(e => e.OtroConcepto).HasMaxLength(2500);
            entity.Property(e => e.Pagada).HasDefaultValue(false);
            entity.Property(e => e.ProveedorNombre)
                .HasMaxLength(500)
                .IsUnicode(false);
            entity.Property(e => e.ProveedorRFC)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.UUID)
                .HasMaxLength(250)
                .IsUnicode(false);
        });

        modelBuilder.Entity<Rel_Destajos_TiposTrabajo_CategoriaObra>(entity =>
        {
            entity.HasKey(e => e.IDDetalle).HasName("PK__Rel_Dest__32EB9E4786B365C5");

            entity.ToTable("Rel_Destajos_TiposTrabajo_CategoriaObra", "dbo");

            entity.Property(e => e.Activo).HasDefaultValue(true);

            entity.HasOne(d => d.IDCategoriaNavigation).WithMany(p => p.Rel_Destajos_TiposTrabajo_CategoriaObra)
                .HasForeignKey(d => d.IDCategoria)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Rel_Destajos_TiposTrabajo_CategoriaObra_Categoria");

            entity.HasOne(d => d.IDTipoTrabajoNavigation).WithMany(p => p.Rel_Destajos_TiposTrabajo_CategoriaObra)
                .HasForeignKey(d => d.IDTipoTrabajo)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Rel_Destajos_TiposTrabajo_CategoriaObra_TipoTrabajo");
        });

        modelBuilder.Entity<Rel_gastos_generales_trabajo>(entity =>
        {
            entity.ToTable("Rel_gastos_generales_trabajo", "dbo");

            entity.Property(e => e.Activo).HasDefaultValue(true);
            entity.Property(e => e.IDCuenta).HasDefaultValue(2);

            entity.HasOne(d => d.IDCoordinacionNavigation).WithMany(p => p.Rel_gastos_generales_trabajo)
                .HasForeignKey(d => d.IDCoordinacion)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Rel_gastos_generales_trabajo_Cat_Categoria_Obra");

            entity.HasOne(d => d.IDCuentaNavigation).WithMany(p => p.Rel_gastos_generales_trabajo)
                .HasForeignKey(d => d.IDCuenta)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Rel_gastos_generales_trabajo_Cat_Destajos_Cuenta");

            entity.HasOne(d => d.IDTrabajoNavigation).WithMany(p => p.Rel_gastos_generales_trabajo)
                .HasForeignKey(d => d.IDTrabajo)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Rel_gastos_generales_trabajo_Cat_Destajos_Tipos_Trabajo");
        });

        modelBuilder.Entity<Rol_Empleados_Destajos>(entity =>
        {
            entity.HasKey(e => e.IDRol);

            entity.ToTable("Rol_Empleados_Destajos", "dbo");

            entity.Property(e => e.Nombre)
                .IsRequired()
                .HasMaxLength(50);
        });

        modelBuilder.Entity<Sucursales>(entity =>
        {
            entity.HasKey(e => e.IDSucursal);

            entity.ToTable("Sucursales", "dbo");

            entity.Property(e => e.IDSucursal).ValueGeneratedNever();
            entity.Property(e => e.Calle).HasMaxLength(250);
            entity.Property(e => e.CodigoPostal).HasMaxLength(10);
            entity.Property(e => e.Colonia).HasMaxLength(300);
            entity.Property(e => e.NoExterior).HasMaxLength(50);
            entity.Property(e => e.NoInterior).HasMaxLength(50);
            entity.Property(e => e.Nombre).HasMaxLength(200);
            entity.Property(e => e.RFC).HasMaxLength(13);
            entity.Property(e => e.RazonSocial).HasMaxLength(300);
            entity.Property(e => e.RegimenFiscal).HasMaxLength(200);
            entity.Property(e => e.Telefono).HasMaxLength(50);
        });

        modelBuilder.Entity<Sucursales_Almacenes>(entity =>
        {
            entity.HasKey(e => new { e.IDSucursal, e.IDAlmacen });

            entity.ToTable("Sucursales/Almacenes", "dbo");
        });

        modelBuilder.Entity<Sucursales_Usuarios>(entity =>
        {
            entity.HasKey(e => new { e.IDSucursal, e.IDUsuario });

            entity.ToTable("Sucursales/Usuarios", "dbo");
        });

        modelBuilder.Entity<Tablas>(entity =>
        {
            entity.HasKey(e => new { e.IDTabla, e.IDRegistro });

            entity.ToTable("Tablas", "dbo");

            entity.Property(e => e.IDTabla).HasMaxLength(5);
            entity.Property(e => e.AdicionalString).HasMaxLength(250);
            entity.Property(e => e.Comentarios).HasMaxLength(1000);
            entity.Property(e => e.Descripcion).HasMaxLength(250);
            entity.Property(e => e.Domicilio).HasMaxLength(150);
            entity.Property(e => e.NombreCorto).HasMaxLength(50);
            entity.Property(e => e.TipoTaller).HasMaxLength(100);
        });

        modelBuilder.Entity<Tablas_Descripciones>(entity =>
        {
            entity.HasKey(e => e.IDTabla).HasName("PK_Tabla/Descripciones");

            entity.ToTable("Tablas/Descripciones", "dbo");

            entity.Property(e => e.IDTabla).HasMaxLength(5);
            entity.Property(e => e.Descripcion).HasMaxLength(150);
        });

        modelBuilder.Entity<Usuarios>(entity =>
        {
            entity.HasKey(e => e.IDUsuario);

            entity.ToTable("Usuarios", "dbo");

            entity.Property(e => e.Apellidos).HasMaxLength(200);
            entity.Property(e => e.Contraseña).HasMaxLength(100);
            entity.Property(e => e.Descripcion).HasMaxLength(100);
            entity.Property(e => e.Email).HasMaxLength(100);
            entity.Property(e => e.Imagen).HasColumnType("image");
            entity.Property(e => e.Nombre).HasMaxLength(200);
            entity.Property(e => e.Terminal).HasMaxLength(5);
            entity.Property(e => e.UltimoAcceso).HasColumnType("datetime");
            entity.Property(e => e.Usuario).HasMaxLength(50);
        });

        modelBuilder.Entity<Usuarios_Permisos>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("Usuarios/Permisos", "dbo");
        });

        modelBuilder.Entity<Vehiculos>(entity =>
        {
            entity.HasKey(e => e.IDVehiculo).HasName("PK__Vehiculo__CA7F8687FF066A50");

            entity.ToTable("Vehiculos", "dbo");

            entity.Property(e => e.ArchivoFotografia).HasMaxLength(250);
            entity.Property(e => e.Costo).HasColumnType("money");
            entity.Property(e => e.FechaAlta).HasColumnType("datetime");
            entity.Property(e => e.FechaModificacion).HasColumnType("datetime");
            entity.Property(e => e.Marca).HasMaxLength(100);
            entity.Property(e => e.Modelo).HasMaxLength(100);
            entity.Property(e => e.Nombre).HasMaxLength(250);
            entity.Property(e => e.Placas).HasMaxLength(50);
            entity.Property(e => e.PolizaSeguro).HasMaxLength(50);
            entity.Property(e => e.TipoCambio).HasColumnType("money");
            entity.Property(e => e.VIN).HasMaxLength(100);
        });

        modelBuilder.Entity<vCorreo_Res>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("vCorreo_Res", "dbo");

            entity.Property(e => e.Email).HasMaxLength(500);
            entity.Property(e => e.aliasRes)
                .IsRequired()
                .HasMaxLength(250)
                .IsUnicode(false);
            entity.Property(e => e.contrarecibos).IsUnicode(false);
        });

        modelBuilder.Entity<vDestajosRelVistaExcelGastos>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("vDestajosRelVistaExcelGastos", "dbo");

            entity.Property(e => e.Coordinacion)
                .IsRequired()
                .HasMaxLength(250)
                .IsUnicode(false);
            entity.Property(e => e.Cuenta)
                .IsRequired()
                .HasMaxLength(50);
            entity.Property(e => e.Gasto)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.Trabajo)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false);
        });

        modelBuilder.Entity<vDestajosRelVistaeExcelGastos>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("vDestajosRelVistaeExcelGastos", "dbo");

            entity.Property(e => e.Coordinacion)
                .IsRequired()
                .HasMaxLength(250)
                .IsUnicode(false);
            entity.Property(e => e.Cuenta)
                .IsRequired()
                .HasMaxLength(50);
            entity.Property(e => e.Gasto)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.Trabajo)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false);
        });

        modelBuilder.Entity<vDestajosRelVistaeExcelResidentes>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("vDestajosRelVistaeExcelResidentes", "dbo");

            entity.Property(e => e.Coordinacion)
                .IsRequired()
                .HasMaxLength(250)
                .IsUnicode(false);
            entity.Property(e => e.Gasto)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.Trabajo)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false);
        });

        modelBuilder.Entity<vDestajosRelVistaeExcelSupervision>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("vDestajosRelVistaeExcelSupervision", "dbo");

            entity.Property(e => e.Coordinacion)
                .IsRequired()
                .HasMaxLength(250)
                .IsUnicode(false);
            entity.Property(e => e.Gasto)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.Residente).HasMaxLength(250);
            entity.Property(e => e.Trabajo)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false);
        });

        modelBuilder.Entity<vDestajosSolicitudes>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("vDestajosSolicitudes", "dbo");

            entity.Property(e => e.Coordinacion)
                .IsRequired()
                .HasMaxLength(250)
                .IsUnicode(false);
            entity.Property(e => e.EstadoObra).HasMaxLength(100);
            entity.Property(e => e.FechaAlta)
                .IsRequired()
                .HasMaxLength(16)
                .IsUnicode(false);
            entity.Property(e => e.FechaPagado)
                .IsRequired()
                .HasMaxLength(16)
                .IsUnicode(false);
            entity.Property(e => e.FechaRevision)
                .IsRequired()
                .HasMaxLength(16)
                .IsUnicode(false);
            entity.Property(e => e.Folio)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.Obra)
                .IsRequired()
                .HasMaxLength(4000);
            entity.Property(e => e.ObsRevision).HasMaxLength(4000);
            entity.Property(e => e.ObservacionesAlta).HasMaxLength(2500);
            entity.Property(e => e.Trabajo)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.altaDateTime).HasColumnType("datetime");
            entity.Property(e => e.concepto)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.coordinador).HasMaxLength(250);
            entity.Property(e => e.estatus)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.monto).HasMaxLength(4000);
            entity.Property(e => e.montoNum).HasColumnType("money");
            entity.Property(e => e.residente).HasMaxLength(250);
        });

        modelBuilder.Entity<vSaldoComprasFacturas>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("vSaldoComprasFacturas", "dbo");

            entity.Property(e => e.Numero).HasMaxLength(50);
            entity.Property(e => e.TotalConsumido).HasColumnType("decimal(18, 2)");
            entity.Property(e => e.TotalRestante).HasColumnType("decimal(19, 2)");
            entity.Property(e => e.TotalSaldo).HasColumnType("decimal(18, 2)");
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}